{"version":3,"file":"js/app.b5634414.js","mappings":"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","sources":["webpack://cat-teacher-quiz/./src/App.vue","webpack://cat-teacher-quiz/./src/App.vue?7ccd","webpack://cat-teacher-quiz/./src/views/HomeView.vue","webpack://cat-teacher-quiz/./src/components/ui/GrTitle.vue","webpack://cat-teacher-quiz/./src/components/ui/GrTitle.vue?98d5","webpack://cat-teacher-quiz/./src/components/ui/GrButton.vue","webpack://cat-teacher-quiz/./src/components/ui/GrButton.vue?2f0d","webpack://cat-teacher-quiz/./src/views/HomeView.vue?1da1","webpack://cat-teacher-quiz/./src/views/SubjectSelectView.vue","webpack://cat-teacher-quiz/./src/components/ui/GrCard.vue","webpack://cat-teacher-quiz/./src/components/ui/GrCard.vue?77f9","webpack://cat-teacher-quiz/./src/config.js","webpack://cat-teacher-quiz/./src/views/SubjectSelectView.vue?9ea0","webpack://cat-teacher-quiz/./src/views/TopicSelectView.vue","webpack://cat-teacher-quiz/./src/components/ui/GrBubble.vue","webpack://cat-teacher-quiz/./src/components/ui/GrBubble.vue?abb0","webpack://cat-teacher-quiz/./src/components/ui/GrHighlight.vue","webpack://cat-teacher-quiz/./src/components/ui/GrHighlight.vue?62ec","webpack://cat-teacher-quiz/./src/views/TopicSelectView.vue?e159","webpack://cat-teacher-quiz/./src/views/QuizView.vue","webpack://cat-teacher-quiz/./src/components/CharacterDisplay.vue","webpack://cat-teacher-quiz/./src/components/CharacterDisplay.vue?b5cb","webpack://cat-teacher-quiz/./src/views/QuizView.vue?7455","webpack://cat-teacher-quiz/./src/views/ResultView.vue","webpack://cat-teacher-quiz/./src/views/ResultView.vue?1b2a","webpack://cat-teacher-quiz/./src/views/ComponentPreview.vue","webpack://cat-teacher-quiz/./src/views/ComponentPreview.vue?c2c5","webpack://cat-teacher-quiz/./src/views/MistakesView.vue","webpack://cat-teacher-quiz/./src/services/DataManager.js","webpack://cat-teacher-quiz/./src/views/MistakesView.vue?4e03","webpack://cat-teacher-quiz/./src/router/index.js","webpack://cat-teacher-quiz/./src/store/modules/mistakes.js","webpack://cat-teacher-quiz/./src/store/index.js","webpack://cat-teacher-quiz/./src/main.js","webpack://cat-teacher-quiz/webpack/bootstrap","webpack://cat-teacher-quiz/webpack/runtime/chunk loaded","webpack://cat-teacher-quiz/webpack/runtime/compat get default export","webpack://cat-teacher-quiz/webpack/runtime/define property getters","webpack://cat-teacher-quiz/webpack/runtime/global","webpack://cat-teacher-quiz/webpack/runtime/hasOwnProperty shorthand","webpack://cat-teacher-quiz/webpack/runtime/jsonp chunk loading","webpack://cat-teacher-quiz/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <header class=\"app-header\">\n      <div class=\"container\">\n        <nav class=\"main-nav\">\n          <router-link to=\"/\" class=\"logo-link\">\n            猫先生のクイズチャレンジ\n          </router-link>\n          <!-- 右上のコンポーネントボタンを削除 -->\n        </nav>\n      </div>\n    </header>\n    \n    <main class=\"app-content\">\n      <router-view v-slot=\"{ Component, route }\">\n        <transition :name=\"route.meta.transition || 'fade'\" mode=\"out-in\">\n          <component :is=\"Component\" />\n        </transition>\n      </router-view>\n    </main>\n    \n    <footer class=\"app-footer\">\n      <div class=\"container\">\n        <p>&copy; 2025 猫先生のクイズチャレンジ</p>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { onMounted } from 'vue';\nimport { useStore } from 'vuex';\n\nexport default {\n  name: 'App',\n  \n  setup() {\n    const store = useStore();\n    \n    onMounted(() => {\n      // アプリの全キャッシュを完全にクリアする\n      // 1. ローカルストレージの全てのキャッシュを削除\n      const keysToRemove = [\n        'dataManagerVersion',\n        'subjectsData', \n        'topicProblems',\n        'quizResults',\n        'selectedTopics'\n      ];\n      \n      keysToRemove.forEach(key => {\n        localStorage.removeItem(key);\n        console.log(`ローカルストレージから削除: ${key}`);\n      });\n      \n      // 2. デバッグ用に現在のLocalStorageの状態をログ出力\n      console.log('キャッシュクリア後のローカルストレージ:', Object.keys(localStorage));\n      \n      // 3. 間違えた問題データは復元\n      store.dispatch('mistakes/loadFromLocalStorage');\n      store.commit('mistakes/updateClearableStatus');\n      \n      // 4. 強制的にデータを再読み込み\n      console.log('キャッシュをクリアしました - 強制再読み込みを開始します');\n      store.dispatch('loadSubjectsData', { forceRefresh: true })\n        .then(() => {\n          console.log('科目データの再読み込みが完了しました');\n        })\n        .catch(error => {\n          console.error('科目データの再読み込み中にエラーが発生しました:', error);\n        });\n    });\n    \n    return {};\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import './styles/variables.scss';\n\n#app {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.app-header {\n  background-color: $primary;\n  padding: $spacing-md 0;\n  box-shadow: $shadow-md;\n  \n  .main-nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    \n    .logo-link {\n      font-family: $font-title;\n      font-size: 1.8rem;\n      color: white;\n      text-decoration: none;\n      transition: transform $transition-speed $transition-function;\n      \n      &:hover {\n        transform: scale(1.05);\n      }\n    }\n    \n    .nav-links {\n      display: flex;\n      gap: $spacing-md;\n      \n      .nav-link {\n        color: white;\n        text-decoration: none;\n        padding: $spacing-xs $spacing-sm;\n        border-radius: $border-radius-sm;\n        transition: background-color $transition-speed $transition-function;\n        \n        &:hover, &.router-link-active {\n          background-color: rgba(255, 255, 255, 0.2);\n        }\n      }\n    }\n  }\n}\n\n.app-content {\n  flex: 1;\n  padding: $spacing-xl 0;\n}\n\n.app-footer {\n  background-color: $primary;\n  color: white;\n  padding: $spacing-md 0;\n  font-size: 0.9rem;\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 $spacing-md;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=4e4f73c4\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4e4f73c4&lang=scss\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"home\">\n    <div class=\"hero-section\">\n      <GrTitle tag=\"h1\" size=\"xl\" color=\"accent2\" class=\"app-title\">猫先生のクイズチャレンジ</GrTitle>\n      <div class=\"cat-image-container\">\n        <!-- 猫先生の画像（絶対パスで指定） -->\n        <img :src=\"topNekoImagePath\" alt=\"猫先生\" class=\"cat-image\" />\n      </div>\n    </div>\n    \n    <div v-if=\"loading\" class=\"loading-container\">\n      <p>データを読み込み中...</p>\n    </div>\n    <div v-else-if=\"error\" class=\"error-container\">\n      <p>エラーが発生しました: {{ error }}</p>\n    </div>\n    <div v-else class=\"main-menu\">\n      <!-- ランク表示は削除 -->\n      \n      <div class=\"menu-buttons\">\n        <GrButton \n          variant=\"accent2\" \n          size=\"lg\" \n          class=\"menu-button\"\n          @click=\"navigateToSubjects\"\n        >\n          学習を始める\n        </GrButton>\n        \n        <div class=\"mistakes-button-container\">\n          <GrButton \n            variant=\"accent3\" \n            size=\"lg\" \n            class=\"menu-button\"\n            @click=\"navigateToMistakes\"\n          >\n            間違えた問題\n          </GrButton>\n          \n          <!-- 間違えた問題の数を表示 -->\n          <div class=\"mistake-badges\" v-if=\"hasMistakes\">\n            <div \n              v-for=\"subject in subjectsWithMistakes\" \n              :key=\"subject\"\n              class=\"mistake-badge\"\n              :class=\"{'has-frequent': frequentMistakesBySubject[subject]}\"\n            >\n              <span class=\"subject-name\">{{ subject === 'science' ? '理科' : '社会' }}</span>\n              <span class=\"count\">{{ mistakesBySubject[subject] }}</span>\n              <span \n                v-if=\"frequentMistakesBySubject[subject]\" \n                class=\"frequent-marker\" \n                title=\"よく間違える問題があります\"\n              >★</span>\n            </div>\n          </div>\n        </div>\n        \n        <!-- 設定ボタンを削除 -->\n      </div>\n      \n      <div class=\"last-played\" v-if=\"userData.lastPlayed\">\n        <p>最終プレイ日時: {{ formatDate(userData.lastPlayed) }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, onMounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport GrTitle from '@/components/ui/GrTitle.vue';\nimport GrButton from '@/components/ui/GrButton.vue';\n\nexport default {\n  name: 'HomeView',\n  components: {\n    GrTitle,\n    GrButton\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const userData = ref({\n      currentRank: '初級',\n      score: 0,\n      lastPlayed: null\n    });\n\n    // コンピューテッドプロパティ\n    const subjects = computed(() => store.getters.getSubjects);\n    const loading = computed(() => store.getters.isLoading);\n    const error = computed(() => store.getters.getError);\n    \n    // 猫先生の画像パスを環境に応じて生成\n    const topNekoImagePath = computed(() => {\n      // 本番環境ではベースURLが「/cat-teacher-quiz/」、開発環境では「/」\n      const isProd = process.env.NODE_ENV === 'production';\n      const basePathForAssets = isProd ? '/cat-teacher-quiz/assets/' : '/assets/';\n      \n      // デバッグ用にパス情報を出力\n      console.log(`トップ画像パス生成 - 環境: ${isProd ? '本番' : '開発'}, ベースパス: ${basePathForAssets}`);\n      \n      // 絶対パスで指定\n      return `${basePathForAssets}characters/neko_sensei/top_neko.png`;\n    });\n    \n    // 間違えた問題の情報\n    const mistakesBySubject = computed(() => store.getters['mistakes/mistakesBySubject']);\n    const frequentMistakesBySubject = computed(() => store.getters['mistakes/frequentMistakesBySubject']);\n    \n    // 間違えた問題がある科目の配列\n    const subjectsWithMistakes = computed(() => {\n      return ['science', 'social'].filter(subject => mistakesBySubject.value[subject]);\n    });\n    \n    // 間違えた問題があるかどうか\n    const hasMistakes = computed(() => {\n      return Object.keys(mistakesBySubject.value).length > 0;\n    });\n\n    // マウント時に科目データを読み込む\n    onMounted(async () => {\n      await store.dispatch('loadSubjectsData');\n      // 間違えた問題データをロード\n      store.dispatch('mistakes/loadFromLocalStorage');\n      // クリア可能状態を更新\n      store.commit('mistakes/updateClearableStatus');\n      // ユーザーデータの読み込み（実際にはlocalStorageから取得する予定）\n      userData.value = {\n        currentRank: 'ねこ見習い',\n        score: 120,\n        lastPlayed: new Date().toISOString()\n      };\n    });\n\n    // 日付のフォーマット\n    const formatDate = (dateString) => {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('ja-JP', { \n        year: 'numeric', \n        month: 'long', \n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n\n    // 画面遷移関数\n    const navigateToSubjects = () => {\n      router.push({ name: 'subjects' });\n    };\n\n    const navigateToMistakes = () => {\n      router.push({ name: 'mistakes' });\n    };\n\n    // 設定ボタン関連の機能を削除\n\n    return {\n      subjects,\n      loading,\n      error,\n      userData,\n      formatDate,\n      mistakesBySubject,\n      frequentMistakesBySubject,\n      hasMistakes,\n      subjectsWithMistakes,\n      navigateToSubjects,\n      navigateToMistakes,\n      topNekoImagePath\n    };\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.home {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: $spacing-md;\n}\n\n.hero-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: $spacing-xl;\n  \n  .app-title {\n    margin-bottom: $spacing-lg;\n  }\n  \n  .cat-image-container {\n    width: 200px;\n    height: 200px;\n    margin: $spacing-md auto;\n    position: relative;\n    \n    .cat-image {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      object-fit: cover;\n      box-shadow: $shadow-md;\n    }\n  }\n}\n\n.loading-container, .error-container {\n  margin: $spacing-xl auto;\n  max-width: 600px;\n  padding: $spacing-md;\n  \n  p {\n    font-family: $font-body;\n    font-size: 1.2rem;\n  }\n}\n\n.error-container {\n  color: $accent4;\n}\n\n.main-menu {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: $spacing-xl;\n  max-width: 600px;\n  margin: 0 auto;\n  \n  .rank-card {\n    width: 100%;\n    padding: $spacing-md;\n    margin-bottom: $spacing-md;\n    \n    .rank-info {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: $spacing-sm;\n      \n      h3 {\n        font-family: $font-title;\n        font-size: 1.4rem;\n        margin-bottom: $spacing-sm;\n      }\n      \n      .rank-badge {\n        font-size: 2rem;\n        font-weight: bold;\n        margin: $spacing-sm 0;\n      }\n      \n      p {\n        font-family: $font-body;\n        font-size: 1.1rem;\n      }\n    }\n  }\n  \n  .menu-buttons {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: $spacing-md;\n    \n    .menu-button {\n      width: 100%;\n    }\n  }\n  \n  .last-played {\n    margin-top: $spacing-md;\n    font-size: 0.9rem;\n    color: rgba($primary, 0.7);\n    font-family: $font-body;\n  }\n}\n\n// レスポンシブデザイン\n@media (min-width: $breakpoint-md) {\n  .menu-buttons {\n    flex-direction: row !important;\n    flex-wrap: wrap;\n    justify-content: center;\n    \n    .menu-button {\n      width: auto !important;\n      min-width: 180px;\n    }\n  }\n}\n\n.menu-button {\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);\n}\n\n.subject-icon {\n  width: 80px;\n  height: 80px;\n  margin-bottom: 1rem;\n  object-fit: contain;\n}\n\nh3 {\n  font-size: 1.5rem;\n  color: white;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\n}\n/* 間違えた問題バッジのスタイル */\n.mistakes-button-container {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.mistake-badges {\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 0.5rem;\n}\n\n.mistake-badge {\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  padding: 0.25rem 0.5rem;\n  border-radius: 1rem;\n  background-color: $background-light;\n  font-size: 0.8rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  \n  &.has-frequent {\n    background-color: lighten($warning, 35%);\n    border: 1px solid $warning;\n  }\n  \n  .subject-name {\n    font-weight: bold;\n  }\n  \n  .count {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    min-width: 1.5rem;\n    height: 1.5rem;\n    padding: 0 0.25rem;\n    border-radius: 1rem;\n    background-color: rgba(0, 0, 0, 0.1);\n    font-size: 0.75rem;\n  }\n  \n  .frequent-marker {\n    color: $warning;\n    font-weight: bold;\n  }\n}\n</style>\n","<template>\n  <component :is=\"tag\" :class=\"['gr-title', sizeClass, colorClass]\">\n    <slot></slot>\n  </component>\n</template>\n\n<script>\nexport default {\n  name: 'GrTitle',\n  props: {\n    tag: {\n      type: String,\n      default: 'h2',\n      validator: (value) => ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'div', 'span'].includes(value)\n    },\n    size: {\n      type: String,\n      default: 'md',\n      validator: (value) => ['sm', 'md', 'lg', 'xl'].includes(value)\n    },\n    color: {\n      type: String,\n      default: 'primary',\n      validator: (value) => ['primary', 'accent1', 'accent2', 'accent3', 'accent4'].includes(value)\n    }\n  },\n  computed: {\n    sizeClass() {\n      return `title-${this.size}`;\n    },\n    colorClass() {\n      return `title-${this.color}`;\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.gr-title {\n  font-family: $font-title;\n  position: relative;\n  display: inline-block;\n  margin-bottom: $spacing-lg;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: 0;\n    width: 100%;\n    height: 3px;\n    border-radius: 2px;\n    transform: rotate(-0.5deg);\n  }\n  \n  // サイズバリエーション\n  &.title-sm {\n    font-size: 1.2rem;\n    \n    &::after {\n      height: 2px;\n    }\n  }\n  \n  &.title-md {\n    font-size: 1.8rem;\n    \n    &::after {\n      height: 3px;\n    }\n  }\n  \n  &.title-lg {\n    font-size: 2.4rem;\n    \n    &::after {\n      height: 4px;\n    }\n  }\n  \n  &.title-xl {\n    font-size: 3rem;\n    \n    &::after {\n      height: 5px;\n    }\n  }\n  \n  // カラーバリエーション\n  &.title-primary::after {\n    background-color: $primary;\n  }\n  \n  &.title-accent1::after {\n    background-color: $accent1;\n  }\n  \n  &.title-accent2::after {\n    background-color: $accent2;\n  }\n  \n  &.title-accent3::after {\n    background-color: $accent3;\n  }\n  \n  &.title-accent4::after {\n    background-color: $accent4;\n  }\n}\n</style>\n","import { render } from \"./GrTitle.vue?vue&type=template&id=4c32d44f&scoped=true\"\nimport script from \"./GrTitle.vue?vue&type=script&lang=js\"\nexport * from \"./GrTitle.vue?vue&type=script&lang=js\"\n\nimport \"./GrTitle.vue?vue&type=style&index=0&id=4c32d44f&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c32d44f\"]])\n\nexport default __exports__","<template>\n  <button \n    :class=\"['gr-button', variantClass, sizeClass, { 'full-width': fullWidth }]\" \n    :disabled=\"disabled\"\n    @click=\"$emit('click', $event)\"\n  >\n    <slot></slot>\n  </button>\n</template>\n\n<script>\nexport default {\n  name: 'GrButton',\n  props: {\n    variant: {\n      type: String,\n      default: 'primary',\n      validator: (value) => ['primary', 'accent1', 'accent2', 'accent3', 'accent4'].includes(value)\n    },\n    size: {\n      type: String,\n      default: 'md',\n      validator: (value) => ['sm', 'md', 'lg'].includes(value)\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    fullWidth: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    variantClass() {\n      return `btn-${this.variant}`;\n    },\n    sizeClass() {\n      return `btn-${this.size}`;\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.gr-button {\n  font-family: $font-handwritten;\n  border: 2px solid $primary;\n  border-radius: $border-radius-md;\n  position: relative;\n  transition: transform $transition-speed $transition-function, box-shadow $transition-speed $transition-function;\n  overflow: hidden;\n  display: inline-block;\n  text-align: center;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.3) 50%, rgba(255,255,255,0.1) 100%);\n  }\n  \n  &:hover:not(:disabled) {\n    transform: translateY(-3px) rotate(-1deg);\n    box-shadow: $shadow-md;\n  }\n  \n  &:active:not(:disabled) {\n    transform: translateY(1px);\n    box-shadow: $shadow-sm;\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  &.full-width {\n    width: 100%;\n  }\n  \n  // サイズバリエーション\n  &.btn-sm {\n    font-size: 0.9rem;\n    padding: $spacing-xs $spacing-md;\n  }\n  \n  &.btn-md {\n    font-size: 1.1rem;\n    padding: $spacing-sm $spacing-lg;\n  }\n  \n  &.btn-lg {\n    font-size: 1.3rem;\n    padding: $spacing-md $spacing-xl;\n  }\n  \n  // カラーバリエーション\n  &.btn-primary {\n    background-color: $primary;\n    color: white;\n    border-color: darken($primary, 10%);\n  }\n  \n  &.btn-accent1 {\n    background-color: $accent1;\n    color: $primary;\n    border-color: darken($accent1, 10%);\n  }\n  \n  &.btn-accent2 {\n    background-color: $accent2;\n    color: $primary;\n    border-color: darken($accent2, 10%);\n  }\n  \n  &.btn-accent3 {\n    background-color: $accent3;\n    color: white;\n    border-color: darken($accent3, 10%);\n  }\n  \n  &.btn-accent4 {\n    background-color: $accent4;\n    color: white;\n    border-color: darken($accent4, 10%);\n  }\n}\n</style>\n","import { render } from \"./GrButton.vue?vue&type=template&id=ff760462&scoped=true\"\nimport script from \"./GrButton.vue?vue&type=script&lang=js\"\nexport * from \"./GrButton.vue?vue&type=script&lang=js\"\n\nimport \"./GrButton.vue?vue&type=style&index=0&id=ff760462&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ff760462\"]])\n\nexport default __exports__","import { render } from \"./HomeView.vue?vue&type=template&id=3e19a1dc&scoped=true\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=3e19a1dc&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3e19a1dc\"]])\n\nexport default __exports__","<template>\n  <div class=\"subject-select\">\n    <GrTitle tag=\"h1\" size=\"lg\" color=\"primary\" class=\"page-title\">教科を選んでください</GrTitle>\n    \n    <div v-if=\"loading\" class=\"loading-container\">\n      <p>データを読み込み中...</p>\n    </div>\n    <div v-else-if=\"error\" class=\"error-container\">\n      <p>エラーが発生しました: {{ error }}</p>\n    </div>\n    <div v-else class=\"subjects-grid\">\n      <GrCard \n        v-for=\"subject in subjects\" \n        :key=\"subject.code\" \n        class=\"subject-card\"\n        :border=\"subject.code\"\n        elevation=\"md\"\n        @click=\"navigateToTopics(subject.code)\"\n      >\n        <div class=\"subject-content\" :style=\"{ backgroundColor: subject.color + '33' }\">\n          <div class=\"subject-icon\" :style=\"{ backgroundColor: subject.color }\">\n            <img :src=\"getSubjectIconPath(subject.icon)\" :alt=\"subject.name\" v-if=\"subject.icon\" />\n            <span v-else>{{ subject.name.charAt(0) }}</span>\n          </div>\n          <h3 class=\"subject-name\">{{ subject.name }}</h3>\n          <p class=\"subject-topics\">{{ subject.topics.length }}個の単元</p>\n        </div>\n      </GrCard>\n    </div>\n    \n    <div class=\"navigation-buttons\">\n      <GrButton \n        variant=\"primary\" \n        size=\"md\" \n        @click=\"navigateToHome\"\n      >\n        ホームに戻る\n      </GrButton>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport GrTitle from '@/components/ui/GrTitle.vue';\nimport GrCard from '@/components/ui/GrCard.vue';\nimport GrButton from '@/components/ui/GrButton.vue';\nimport { assetBaseUrl } from '@/config';\n\nexport default {\n  name: 'SubjectSelectView',\n  components: {\n    GrTitle,\n    GrCard,\n    GrButton\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n\n    // コンピューテッドプロパティ\n    const subjects = computed(() => store.getters.getSubjects);\n    const loading = computed(() => store.getters.isLoading);\n    const error = computed(() => store.getters.getError);\n\n    // マウント時に科目データを読み込む\n    onMounted(async () => {\n      if (!subjects.value.length) {\n        await store.dispatch('loadSubjectsData');\n      }\n    });\n\n    // 単元選択画面へのナビゲーション\n    const navigateToTopics = (subjectCode) => {\n      router.push({ \n        name: 'topics', \n        params: { subjectCode }\n      });\n    };\n\n    // ホーム画面へのナビゲーション\n    const navigateToHome = () => {\n      router.push({ name: 'home' });\n    };\n    \n    // 科目アイコンのパスを環境に応じて生成する関数\n    const getSubjectIconPath = (iconPath) => {\n      // 本番環境ではベースURLが「/cat-teacher-quiz/」、開発環境では「/」\n      const isProd = process.env.NODE_ENV === 'production';\n      const basePathForAssets = isProd ? '/cat-teacher-quiz/' : '/';\n      \n      // デバッグ用にパス情報を出力\n      console.log(`科目アイコンパス生成 - 環境: ${isProd ? '本番' : '開発'}, パス: ${basePathForAssets}${iconPath}`);\n      \n      return `${basePathForAssets}${iconPath}`;\n    };\n\n    return {\n      subjects,\n      loading,\n      error,\n      navigateToTopics,\n      navigateToHome,\n      assetBaseUrl,\n      getSubjectIconPath\n    };\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.subject-select {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: $spacing-md;\n}\n\n.page-title {\n  text-align: center;\n  margin-bottom: $spacing-xl;\n}\n\n.loading-container, .error-container {\n  margin: $spacing-xl auto;\n  max-width: 600px;\n  padding: $spacing-md;\n  text-align: center;\n  \n  p {\n    font-family: $font-body;\n    font-size: 1.2rem;\n  }\n}\n\n.error-container {\n  color: $accent4;\n}\n\n.subjects-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: $spacing-lg;\n  margin-bottom: $spacing-xl;\n}\n\n.subject-card {\n  cursor: pointer;\n  transition: transform $transition-speed $transition-function;\n  \n  &:hover {\n    transform: translateY(-5px);\n  }\n  \n  .subject-content {\n    padding: $spacing-md;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    border-radius: $border-radius-md;\n    height: 100%;\n    \n    .subject-icon {\n      width: 80px;\n      height: 80px;\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin-bottom: $spacing-md;\n      \n      img {\n        max-width: 60%;\n        max-height: 60%;\n      }\n      \n      span {\n        font-size: 2rem;\n        color: white;\n        font-weight: bold;\n      }\n    }\n    \n    .subject-name {\n      font-family: $font-title;\n      font-size: 1.5rem;\n      margin-bottom: $spacing-sm;\n    }\n    \n    .subject-topics {\n      font-family: $font-body;\n      font-size: 1rem;\n      color: rgba($primary, 0.7);\n    }\n  }\n}\n\n.navigation-buttons {\n  display: flex;\n  justify-content: center;\n  margin-top: $spacing-xl;\n}\n\n// レスポンシブデザイン\n@media (max-width: $breakpoint-sm) {\n  .subjects-grid {\n    grid-template-columns: 1fr;\n  }\n}\n</style>\n","<template>\n  <div :class=\"['gr-card', elevationClass, borderClass]\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'GrCard',\n  props: {\n    elevation: {\n      type: String,\n      default: 'md',\n      validator: (value) => ['none', 'sm', 'md', 'lg'].includes(value)\n    },\n    border: {\n      type: String,\n      default: 'primary',\n      validator: (value) => ['none', 'primary', 'accent1', 'accent2', 'accent3', 'accent4', 'social', 'science'].includes(value)\n    }\n  },\n  computed: {\n    elevationClass() {\n      return `elevation-${this.elevation}`;\n    },\n    borderClass() {\n      return `border-${this.border}`;\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.gr-card {\n  position: relative;\n  background-color: white;\n  border-radius: $border-radius-lg;\n  padding: $spacing-lg;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -5px;\n    left: -5px;\n    right: -5px;\n    bottom: -5px;\n    border: 2px dashed rgba($primary, 0.3);\n    border-radius: $border-radius-xl;\n    z-index: -1;\n    transform: rotate(-0.5deg);\n  }\n  \n  // 影のバリエーション\n  &.elevation-none {\n    box-shadow: none;\n  }\n  \n  &.elevation-sm {\n    box-shadow: $shadow-sm;\n  }\n  \n  &.elevation-md {\n    box-shadow: $shadow-md;\n  }\n  \n  &.elevation-lg {\n    box-shadow: $shadow-lg;\n  }\n  \n  // 枠線のバリエーション\n  &.border-none {\n    border: none;\n    \n    &::before {\n      display: none;\n    }\n  }\n  \n  &.border-primary {\n    border: 2px solid $primary;\n    \n    &::before {\n      border-color: rgba($primary, 0.3);\n    }\n  }\n  \n  &.border-accent1 {\n    border: 2px solid $accent1;\n    \n    &::before {\n      border-color: rgba($accent1, 0.3);\n    }\n  }\n  \n  &.border-accent2 {\n    border: 2px solid $accent2;\n    \n    &::before {\n      border-color: rgba($accent2, 0.3);\n    }\n  }\n  \n  &.border-accent3 {\n    border: 2px solid $accent3;\n    \n    &::before {\n      border-color: rgba($accent3, 0.3);\n    }\n  }\n  \n  &.border-accent4 {\n    border: 2px solid $accent4;\n    \n    &::before {\n      border-color: rgba($accent4, 0.3);\n    }\n  }\n}\n</style>\n","import { render } from \"./GrCard.vue?vue&type=template&id=597a96e0&scoped=true\"\nimport script from \"./GrCard.vue?vue&type=script&lang=js\"\nexport * from \"./GrCard.vue?vue&type=script&lang=js\"\n\nimport \"./GrCard.vue?vue&type=style&index=0&id=597a96e0&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-597a96e0\"]])\n\nexport default __exports__","/**\n * アプリケーションの全体設定\n * 環境に応じた設定値を提供します\n */\n\n// 本番環境かどうかの判定\nconst isProd = process.env.NODE_ENV === 'production';\n\n// ベースURL（スラッシュで終わる形式で指定）\nexport const baseUrl = isProd ? '/cat-teacher-quiz/' : '/';\n\n// アセット（画像など）のベースURL\nexport const assetBaseUrl = isProd ? '/cat-teacher-quiz/' : '/';\n\n// デバッグモード\nexport const debug = !isProd;\n\nexport default {\n  baseUrl,\n  assetBaseUrl,\n  debug\n};\n","import { render } from \"./SubjectSelectView.vue?vue&type=template&id=499107da&scoped=true\"\nimport script from \"./SubjectSelectView.vue?vue&type=script&lang=js\"\nexport * from \"./SubjectSelectView.vue?vue&type=script&lang=js\"\n\nimport \"./SubjectSelectView.vue?vue&type=style&index=0&id=499107da&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-499107da\"]])\n\nexport default __exports__","<template>\n  <div class=\"topic-select\">\n    <div class=\"header-section\">\n      <GrTitle tag=\"h1\" size=\"lg\" color=\"primary\" class=\"page-title\">\n        {{ currentSubject ? currentSubject.name : '単元を選んでください' }}\n      </GrTitle>\n      <GrBubble direction=\"right\" color=\"accent2\" class=\"instruction-bubble\">\n        学習したい単元を選んでください\n      </GrBubble>\n    </div>\n    \n    <div v-if=\"loading\" class=\"loading-container\">\n      <p>データを読み込み中...</p>\n    </div>\n    <div v-else-if=\"error\" class=\"error-container\">\n      <p>エラーが発生しました: {{ error }}</p>\n    </div>\n    <div v-else-if=\"!currentSubject\" class=\"error-container\">\n      <p>科目が見つかりません。科目選択画面に戻ってください。</p>\n      <GrButton \n        variant=\"primary\" \n        size=\"md\" \n        @click=\"navigateToSubjects\"\n        class=\"mt-4\"\n      >\n        科目選択に戻る\n      </GrButton>\n    </div>\n    <div v-else class=\"topics-grid\">\n      <GrCard \n        v-for=\"topic in currentSubject.topics\" \n        :key=\"topic.code\" \n        class=\"topic-card\"\n        :border=\"topic.code\"\n        elevation=\"md\"\n        @click=\"navigateToQuiz(currentSubject.code, topic.code)\"\n      >\n        <div class=\"topic-content\">\n          <div class=\"topic-header\">\n            <div class=\"topic-icon\" :style=\"{ backgroundColor: currentSubject.color }\">\n              <img :src=\"`${assetBaseUrl}${topic.icon}`\" :alt=\"topic.name\" v-if=\"topic.icon\" />\n              <span v-else>{{ topic.name.charAt(0) }}</span>\n            </div>\n            <h3 class=\"topic-name\">{{ topic.name }}</h3>\n          </div>\n          \n          <div class=\"topic-details\">\n            <div class=\"detail-item\">\n              <span class=\"detail-label\">問題数:</span>\n              <GrHighlight color=\"yellow\" :inline=\"true\">{{ topic.questionCount }}問</GrHighlight>\n            </div>\n            <div class=\"detail-item\">\n              <span class=\"detail-label\">難易度:</span>\n              <GrHighlight color=\"accent3\" :inline=\"true\">{{ topic.difficulty }}</GrHighlight>\n            </div>\n            <div class=\"detail-item\">\n              <span class=\"detail-label\">対象年齢:</span>\n              <GrHighlight color=\"accent2\" :inline=\"true\">{{ topic.targetAge }}</GrHighlight>\n            </div>\n          </div>\n        </div>\n      </GrCard>\n    </div>\n    \n    <div class=\"navigation-buttons\">\n      <GrButton \n        variant=\"primary\" \n        size=\"md\" \n        @click=\"navigateToSubjects\"\n      >\n        科目選択に戻る\n      </GrButton>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\nimport GrTitle from '@/components/ui/GrTitle.vue';\nimport GrCard from '@/components/ui/GrCard.vue';\nimport GrButton from '@/components/ui/GrButton.vue';\nimport GrBubble from '@/components/ui/GrBubble.vue';\nimport GrHighlight from '@/components/ui/GrHighlight.vue';\nimport { assetBaseUrl } from '@/config';\n\nexport default {\n  name: 'TopicSelectView',\n  components: {\n    GrTitle,\n    GrCard,\n    GrButton,\n    GrBubble,\n    GrHighlight\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    \n    const subjectCode = route.params.subjectCode;\n\n    // コンピューテッドプロパティ\n    const subjects = computed(() => store.getters.getSubjects);\n    const currentSubject = computed(() => \n      subjects.value.find(subject => subject.code === subjectCode)\n    );\n    const loading = computed(() => store.getters.isLoading);\n    const error = computed(() => store.getters.getError);\n\n    // マウント時に科目データを読み込む\n    onMounted(async () => {\n      if (!subjects.value.length) {\n        await store.dispatch('loadSubjectsData');\n      }\n    });\n\n    // クイズ画面へのナビゲーション\n    const navigateToQuiz = (subjectCode, topicCode) => {\n      router.push({ \n        name: 'quiz', \n        params: { subjectCode, topicCode }\n      });\n    };\n\n    // 科目選択画面へのナビゲーション\n    const navigateToSubjects = () => {\n      router.push({ name: 'subjects' });\n    };\n\n    return {\n      subjects,\n      currentSubject,\n      loading,\n      error,\n      navigateToQuiz,\n      navigateToSubjects,\n      assetBaseUrl\n    };\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.topic-select {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: $spacing-md;\n}\n\n.header-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: $spacing-xl;\n  position: relative;\n  \n  .page-title {\n    text-align: center;\n    margin-bottom: $spacing-md;\n  }\n  \n  .instruction-bubble {\n    margin-top: $spacing-md;\n  }\n}\n\n.loading-container, .error-container {\n  margin: $spacing-xl auto;\n  max-width: 600px;\n  padding: $spacing-md;\n  text-align: center;\n  \n  p {\n    font-family: $font-body;\n    font-size: 1.2rem;\n  }\n}\n\n.error-container {\n  color: $accent4;\n}\n\n.topics-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: $spacing-lg;\n  margin-bottom: $spacing-xl;\n}\n\n.topic-card {\n  cursor: pointer;\n  transition: transform $transition-speed $transition-function;\n  \n  &:hover {\n    transform: translateY(-5px);\n  }\n  \n  .topic-content {\n    padding: $spacing-md;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    \n    .topic-header {\n      display: flex;\n      align-items: center;\n      margin-bottom: $spacing-md;\n      \n      .topic-icon {\n        width: 50px;\n        height: 50px;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: $spacing-md;\n        flex-shrink: 0;\n        \n        img {\n          max-width: 60%;\n          max-height: 60%;\n        }\n        \n        span {\n          font-size: 1.5rem;\n          color: white;\n          font-weight: bold;\n        }\n      }\n      \n      .topic-name {\n        font-family: $font-title;\n        font-size: 1.3rem;\n      }\n    }\n    \n    .topic-details {\n      display: flex;\n      flex-direction: column;\n      gap: $spacing-sm;\n      \n      .detail-item {\n        display: flex;\n        align-items: center;\n        \n        .detail-label {\n          font-family: $font-body;\n          font-size: 0.9rem;\n          margin-right: $spacing-sm;\n          min-width: 70px;\n        }\n      }\n    }\n  }\n}\n\n.navigation-buttons {\n  display: flex;\n  justify-content: center;\n  margin-top: $spacing-xl;\n}\n\n// レスポンシブデザイン\n@media (max-width: $breakpoint-sm) {\n  .topics-grid {\n    grid-template-columns: 1fr;\n  }\n}\n\n.mt-4 {\n  margin-top: $spacing-md;\n}\n</style>\n","<template>\n  <div :class=\"['gr-bubble', `bubble-${direction}`, colorClass]\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'GrBubble',\n  props: {\n    direction: {\n      type: String,\n      default: 'bottom',\n      validator: (value) => ['top', 'right', 'bottom', 'left'].includes(value)\n    },\n    color: {\n      type: String,\n      default: 'primary',\n      validator: (value) => ['primary', 'accent1', 'accent2', 'accent3', 'accent4', 'white'].includes(value)\n    }\n  },\n  computed: {\n    colorClass() {\n      return `bubble-${this.color}`;\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.gr-bubble {\n  position: relative;\n  border-radius: $border-radius-lg;\n  padding: $spacing-md;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    transform: rotate(45deg);\n  }\n  \n  // 方向バリエーション\n  &.bubble-bottom::before {\n    top: -10px;\n    left: 20px;\n  }\n  \n  &.bubble-top::before {\n    bottom: -10px;\n    left: 20px;\n  }\n  \n  &.bubble-left::before {\n    top: 20px;\n    right: -10px;\n  }\n  \n  &.bubble-right::before {\n    top: 20px;\n    left: -10px;\n  }\n  \n  // カラーバリエーション\n  &.bubble-primary {\n    background-color: $primary;\n    color: white;\n    border: 2px solid darken($primary, 10%);\n    \n    &::before {\n      background-color: $primary;\n      border: 2px solid darken($primary, 10%);\n      border-top-color: transparent;\n      border-left-color: transparent;\n    }\n  }\n  \n  &.bubble-accent1 {\n    background-color: $accent1;\n    color: $primary;\n    border: 2px solid darken($accent1, 10%);\n    \n    &::before {\n      background-color: $accent1;\n      border: 2px solid darken($accent1, 10%);\n      border-top-color: transparent;\n      border-left-color: transparent;\n    }\n  }\n  \n  &.bubble-accent2 {\n    background-color: $accent2;\n    color: $primary;\n    border: 2px solid darken($accent2, 10%);\n    \n    &::before {\n      background-color: $accent2;\n      border: 2px solid darken($accent2, 10%);\n      border-top-color: transparent;\n      border-left-color: transparent;\n    }\n  }\n  \n  &.bubble-accent3 {\n    background-color: $accent3;\n    color: white;\n    border: 2px solid darken($accent3, 10%);\n    \n    &::before {\n      background-color: $accent3;\n      border: 2px solid darken($accent3, 10%);\n      border-top-color: transparent;\n      border-left-color: transparent;\n    }\n  }\n  \n  &.bubble-accent4 {\n    background-color: $accent4;\n    color: white;\n    border: 2px solid darken($accent4, 10%);\n    \n    &::before {\n      background-color: $accent4;\n      border: 2px solid darken($accent4, 10%);\n      border-top-color: transparent;\n      border-left-color: transparent;\n    }\n  }\n  \n  &.bubble-white {\n    background-color: white;\n    color: $primary;\n    border: 2px solid $primary;\n    \n    &::before {\n      background-color: white;\n      border: 2px solid $primary;\n      border-top-color: transparent;\n      border-left-color: transparent;\n    }\n  }\n  \n  // 方向ごとの境界線調整\n  &.bubble-bottom::before {\n    border-bottom: none;\n    border-right: none;\n  }\n  \n  &.bubble-top::before {\n    border-top: none;\n    border-left: none;\n  }\n  \n  &.bubble-left::before {\n    border-left: none;\n    border-bottom: none;\n  }\n  \n  &.bubble-right::before {\n    border-right: none;\n    border-top: none;\n  }\n}\n</style>\n","import { render } from \"./GrBubble.vue?vue&type=template&id=28f63b2b&scoped=true\"\nimport script from \"./GrBubble.vue?vue&type=script&lang=js\"\nexport * from \"./GrBubble.vue?vue&type=script&lang=js\"\n\nimport \"./GrBubble.vue?vue&type=style&index=0&id=28f63b2b&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-28f63b2b\"]])\n\nexport default __exports__","<template>\n  <span :class=\"['gr-highlight', colorClass, { 'inline': inline }]\">\n    <slot></slot>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: 'GrHighlight',\n  props: {\n    color: {\n      type: String,\n      default: 'yellow',\n      validator: (value) => ['yellow', 'orange', 'red'].includes(value)\n    },\n    inline: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    colorClass() {\n      return `highlight-${this.color}`;\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.gr-highlight {\n  position: relative;\n  z-index: 1;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 0.5em;\n    z-index: -1;\n    transform: rotate(-1deg) translateY(0.1em);\n  }\n  \n  &.inline {\n    display: inline;\n  }\n  \n  &:not(.inline) {\n    display: inline-block;\n  }\n  \n  // カラーバリエーション\n  &.highlight-yellow::before {\n    background-color: rgba($accent1, 0.4);\n  }\n  \n  &.highlight-orange::before {\n    background-color: rgba($accent2, 0.4);\n  }\n  \n  &.highlight-red::before {\n    background-color: rgba($accent4, 0.4);\n  }\n}\n</style>\n","import { render } from \"./GrHighlight.vue?vue&type=template&id=31b1ff5c&scoped=true\"\nimport script from \"./GrHighlight.vue?vue&type=script&lang=js\"\nexport * from \"./GrHighlight.vue?vue&type=script&lang=js\"\n\nimport \"./GrHighlight.vue?vue&type=style&index=0&id=31b1ff5c&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-31b1ff5c\"]])\n\nexport default __exports__","import { render } from \"./TopicSelectView.vue?vue&type=template&id=b437ba1e&scoped=true\"\nimport script from \"./TopicSelectView.vue?vue&type=script&lang=js\"\nexport * from \"./TopicSelectView.vue?vue&type=script&lang=js\"\n\nimport \"./TopicSelectView.vue?vue&type=style&index=0&id=b437ba1e&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b437ba1e\"]])\n\nexport default __exports__","<template>\n  <div class=\"quiz-view\">\n    <div class=\"quiz-header\">\n      <div class=\"quiz-info\">\n        <GrTitle tag=\"h2\" size=\"md\" color=\"primary\">\n          {{ currentSubject ? currentSubject.name : '' }} - {{ currentTopic ? currentTopic.name : '' }}\n        </GrTitle>\n        <div class=\"quiz-progress\">\n          <div class=\"progress-text\">問題 {{ currentQuestionIndex + 1 }} / {{ questions.length }}</div>\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" :style=\"{ width: `${progressPercentage}%` }\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div v-if=\"loading\" class=\"loading-container\">\n      <p>データを読み込み中...</p>\n    </div>\n    <div v-else-if=\"error\" class=\"error-container\">\n      <p>エラーが発生しました: {{ error }}</p>\n    </div>\n    <div v-else-if=\"!currentQuestion\" class=\"error-container\">\n      <p>問題が見つかりません。別の単元を選んでください。</p>\n      <GrButton \n        variant=\"primary\" \n        size=\"md\" \n        @click=\"navigateToTopics\"\n        class=\"mt-4\"\n      >\n        単元選択に戻る\n      </GrButton>\n    </div>\n    <div v-else class=\"quiz-content\">\n      <div class=\"question-section\">\n        <GrCard class=\"question-card\" elevation=\"md\" border=\"primary\">\n          <GrTitle tag=\"h3\" size=\"md\" color=\"primary\" class=\"question-title\">問題</GrTitle>\n          <p class=\"question-text\">{{ currentQuestion.question }}</p>\n        </GrCard>\n      </div>\n      \n      <div class=\"choices-section\">\n        <div class=\"choices-grid\">\n          <GrButton \n            v-for=\"(choice, index) in currentQuestion.options\" \n            :key=\"index\"\n            :variant=\"getChoiceVariant(index)\"\n            size=\"lg\"\n            class=\"choice-button\"\n            :disabled=\"answerSubmitted\"\n            @click=\"selectAnswer(index)\"\n          >\n            {{ choice }}\n          </GrButton>\n        </div>\n      </div>\n      \n      <div class=\"feedback-section\" v-if=\"answerSubmitted\">\n        <GrCard class=\"feedback-card\" :elevation=\"feedbackCardElevation\" :border=\"feedbackCardBorder\">\n          <div class=\"feedback-content\">\n            <GrTitle tag=\"h3\" size=\"md\" :color=\"isCorrect ? 'accent2' : 'accent4'\" class=\"feedback-title\">\n              {{ isCorrect ? '正解！' : '不正解...' }}\n            </GrTitle>\n            <p class=\"explanation\">{{ currentQuestion.explanation }}</p>\n          </div>\n        </GrCard>\n        \n        <div class=\"navigation-buttons\">\n          <GrButton \n            variant=\"accent2\" \n            size=\"lg\" \n            @click=\"nextQuestion\"\n            :disabled=\"!answerSubmitted\"\n          >\n            {{ isLastQuestion ? '結果を見る' : '次の問題へ' }}\n          </GrButton>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"character-section\">\n      <character-display\n        :character=\"getCharacterType()\"\n        :state=\"getCharacterState()\"\n        :message=\"characterMessage\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed, ref, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter, useRoute } from 'vue-router';\nimport GrTitle from '@/components/ui/GrTitle.vue';\nimport GrCard from '@/components/ui/GrCard.vue';\nimport GrButton from '@/components/ui/GrButton.vue';\n// GrBubbleは使用していないため削除\nimport CharacterDisplay from '@/components/CharacterDisplay.vue';\n\nexport default {\n  name: 'QuizView',\n  components: {\n    GrTitle,\n    GrCard,\n    GrButton,\n    CharacterDisplay\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n    \n    const subjectCode = route.params.subjectCode;\n    const topicCode = route.params.topicCode;\n    \n    // リアクティブな状態\n    const questions = ref([]);\n    const currentQuestionIndex = ref(0);\n    const selectedAnswer = ref(null);\n    const answerSubmitted = ref(false);\n    const isCorrect = ref(false);\n    const characterMessage = ref('問題を解いてみよう！');\n    const characterType = ref('neko_sensei'); // デフォルトのキャラクター\n    const characterState = ref('normal'); // デフォルトの状態\n\n    // コンピューテッドプロパティ\n    const subjects = computed(() => store.getters.getSubjects);\n    const currentSubject = computed(() => \n      subjects.value.find(subject => subject.code === subjectCode)\n    );\n    const currentTopic = computed(() => {\n      if (!currentSubject.value) return null;\n      return currentSubject.value.topics.find(topic => topic.code === topicCode);\n    });\n    const loading = computed(() => store.getters.isLoading);\n    const error = computed(() => store.getters.getError);\n    const currentQuestion = computed(() => {\n      if (questions.value.length === 0) return null;\n      return questions.value[currentQuestionIndex.value];\n    });\n    const progressPercentage = computed(() => {\n      if (questions.value.length === 0) return 0;\n      return (currentQuestionIndex.value / questions.value.length) * 100;\n    });\n    const isLastQuestion = computed(() => {\n      return currentQuestionIndex.value === questions.value.length - 1;\n    });\n    const feedbackCardElevation = computed(() => isCorrect.value ? 'lg' : 'sm');\n    const feedbackCardBorder = computed(() => isCorrect.value ? 'accent2' : 'accent4');\n    const characterBubbleColor = computed(() => {\n      if (!answerSubmitted.value) return 'primary';\n      return isCorrect.value ? 'accent2' : 'accent4';\n    });\n\n    // クイズモードを確認\n    const quizMode = ref(route.query.mode || 'normal');\n    const retryQuestionId = ref(route.query.questionId || null);\n    const retryQuestionIds = ref([]);\n    const isFrequentMistakesMode = ref(route.query.frequentOnly === 'true');\n    \n    // 複数の問題に挑戦する場合、問題 ID リストを取得\n    if (quizMode.value === 'retryMultiple' && route.query.questionIds) {\n      try {\n        retryQuestionIds.value = JSON.parse(route.query.questionIds);\n        console.log('複数問題再挑戦モード:', {\n          問題数: retryQuestionIds.value.length,\n          よく間違える問題モード: isFrequentMistakesMode.value\n        });\n      } catch (err) {\n        console.error('問題 ID リストの解析エラー:', err);\n      }\n    }\n    \n    // マウント時にデータを読み込む\n    onMounted(async () => {\n      try {\n        // クイズ開始時に結果を完全に初期化\n        const initialQuizResults = {\n          correctCount: 0,\n          totalQuestions: 0,\n          incorrectIds: [],\n          subjectCode: route.params.subjectCode,\n          topicCode: route.params.topicCode\n        };\n        \n        // キャッシュ問題を避けるため、旧データを済みチェック\n        console.log('全ローカルストレージキー:', Object.keys(localStorage));\n        \n        // quizResultsとその他のキャッシュをクリア\n        localStorage.setItem('quizResults', JSON.stringify(initialQuizResults));\n        console.log('クイズ結果を初期化しました:', initialQuizResults);\n        \n        // デバッグ情報: 指定されたパラメータを表示\n        console.log('クイズパラメータ:', { \n          科目コード: subjectCode, \n          トピックコード: topicCode, \n          モード: quizMode.value \n        });\n        \n        // 再挑戦モードの場合はキャラクターメッセージを変更\n        if (quizMode.value === 'retry') {\n          characterMessage.value = '間違えた問題に再挑戦してみよう！';\n        } else if (quizMode.value === 'retryMultiple') {\n          if (isFrequentMistakesMode.value) {\n            characterMessage.value = 'よく間違える問題に挑戦してみよう！克服できるかにゃ？';\n          } else {\n            characterMessage.value = '間違えた問題に挑戦してみよう！今度はできるかにゃ？';\n          }\n        }\n        \n        // 科目データを強制的に再読み込み\n        await store.dispatch('loadSubjectsData', { forceRefresh: true });\n        console.log('科目データを強制的に再読み込みしました');\n        \n        // 問題データを読み込む - 強制再読み込みオプションを指定\n        await store.dispatch('loadProblems', {\n          subjectCode,\n          topicCode,\n          forceRefresh: true // 強制的に再読み込みする\n        });\n        \n        // ストアから問題データを取得\n        const problemsData = store.getters.getProblems;\n        console.log('取得した問題データ:', problemsData.length, '個');\n        \n        if (!problemsData || problemsData.length === 0) {\n          throw new Error('問題データが見つかりませんでした。');\n        }\n        \n        questions.value = problemsData;\n        \n        // 再挑戦モードの場合の処理\n        if (quizMode.value === 'retry' && retryQuestionId.value) {\n          // 単一問題再挑戦モード\n          const targetQuestion = questions.value.find(q => q.id === retryQuestionId.value);\n          if (targetQuestion) {\n            questions.value = [targetQuestion]; // 特定の問題だけを設定\n            console.log('再挑戦モード: 問題 ID', retryQuestionId.value);\n          } else {\n            console.error('指定された問題 ID が見つかりません:', retryQuestionId.value);\n          }\n        } else if (quizMode.value === 'retryMultiple' && retryQuestionIds.value.length > 0) {\n          // 複数問題再挑戦モード\n          const targetQuestions = [];\n          \n          // 指定された問題 ID に一致する問題を取得\n          for (const id of retryQuestionIds.value) {\n            const question = questions.value.find(q => q.id === id);\n            if (question) {\n              targetQuestions.push(question);\n            }\n          }\n          \n          if (targetQuestions.length > 0) {\n            questions.value = targetQuestions; // 対象の問題だけを設定\n            questions.value = shuffleArray([...questions.value]); // 問題をシャッフル\n            console.log('複数問題再挑戦モード: 読み込み完了', {\n              読み込み成功数: targetQuestions.length,\n              対象問題数: retryQuestionIds.value.length\n            });\n          } else {\n            console.error('指定された問題が見つかりません');\n          }\n        } else {\n          // 通常モードの場合はランダムに並び替え\n          questions.value = shuffleArray([...questions.value]);\n        }\n        \n      } catch (err) {\n        console.error('問題データの読み込み中にエラーが発生しました:', err);\n        store.commit('SET_ERROR', err.message);\n      }\n    });\n    \n    // 配列をランダムに並び替える関数\n    const shuffleArray = (array) => {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      return array;\n    };\n\n    // 回答を選択\n    const selectAnswer = (index) => {\n      selectedAnswer.value = index;\n      answerSubmitted.value = true;\n      isCorrect.value = index === currentQuestion.value.correctAnswer;\n      \n      // 正答数と間違えた問題を記録\n      const quizResults = JSON.parse(localStorage.getItem('quizResults'));\n      \n      // 正解か不正解かに応じてカウントを更新\n      \n      if (isCorrect.value) {\n        quizResults.correctCount += 1; // 正解数をカウント\n      } else {\n        // 間違えた問題のIDを記録\n        const incorrectId = currentQuestion.value.id;\n        // 重複を確実に防ぐために配列に存在しない場合のみ追加\n        if (!quizResults.incorrectIds.includes(incorrectId)) {\n          quizResults.incorrectIds.push(incorrectId);\n          \n          // デバッグ用に問題データをログ出力\n          console.log('間違えた問題データ:', {\n            id: currentQuestion.value.id,\n            question: currentQuestion.value.question,\n            explanation: currentQuestion.value.explanation\n          });\n          \n          // 間違えた問題のデータをストアに保存（解説を含む）\n          store.commit('addMistake', {\n            questionId: currentQuestion.value.id,\n            subject: route.params.subjectCode,\n            topic: route.params.topicCode,\n            question: currentQuestion.value.question,\n            options: currentQuestion.value.options,\n            correctAnswer: currentQuestion.value.correctAnswer,\n            explanation: currentQuestion.value.explanation\n          });\n        }\n      }\n      \n      // デバッグ用に詳細ログ出力\n      console.log('回答後の状態:', {\n        問題番号: currentQuestionIndex.value + 1,\n        正解: isCorrect.value,\n        正答数: quizResults.correctCount,\n        不正解問題数: quizResults.incorrectIds.length\n      });\n      \n      // 必ず科目とトピックコードを記録\n      quizResults.subjectCode = route.params.subjectCode;\n      quizResults.topicCode = route.params.topicCode;\n      \n      // デバッグ用にログ出力\n      console.log('クイズ結果更新:', quizResults);\n      localStorage.setItem('quizResults', JSON.stringify(quizResults));\n      \n      // キャラクターのメッセージと状態を更新\n      if (isCorrect.value) {\n        characterMessage.value = getRandomCorrectMessage();\n        characterState.value = 'happy';\n      } else {\n        characterMessage.value = getRandomIncorrectMessage();\n        characterState.value = 'teasing';\n      }\n    };\n\n    // 次の問題へ\n    const nextQuestion = () => {\n      // まだ回答が提出されていなければ何もしない\n      if (answerSubmitted.value === false) {\n        console.log('まだ回答が提出されていないため、nextQuestionをスキップします');\n        return;\n      }\n\n      if (isLastQuestion.value) {\n        // 結果を保存して結果画面へ遷移\n        const quizResults = JSON.parse(localStorage.getItem('quizResults'));\n        \n        // 実際の問題数を正しく記録\n        quizResults.totalQuestions = questions.value.length;\n\n        // 間違えた問題の数を問題数から得た正解数を引いた値に修正\n        const incorrectCount = quizResults.incorrectIds.length;\n        \n        // 正確な表示のため正答数を再計算\n        // 正答数 = 全問題数 - 不正解数\n        quizResults.correctCount = quizResults.totalQuestions - incorrectCount;\n        \n        // 科目とトピックコードを確実に記録\n        quizResults.subjectCode = route.params.subjectCode;\n        quizResults.topicCode = route.params.topicCode;\n        \n        // デバッグ用に詳細ログ出力\n        console.log('クイズ結果を保存して結果画面へ遷移');\n        console.log('クイズ結果最終:', {\n          総問題数: quizResults.totalQuestions,\n          正答数: quizResults.correctCount,\n          不正解数: incorrectCount,\n          正答率: Math.round((quizResults.correctCount / quizResults.totalQuestions) * 100) + '%',\n          間違えた問題数: quizResults.incorrectIds.length,\n          間違えた問題IDs: quizResults.incorrectIds\n        });\n        \n        localStorage.setItem('quizResults', JSON.stringify(quizResults));\n        \n        router.push({ \n          name: 'result', \n          params: { subjectCode, topicCode }\n        });\n      } else {\n        console.log('次の問題へ移動: ', currentQuestionIndex.value + 1);\n        \n        // `nextQuestion` が二重実行されないようにフラグを入れる\n        if (!answerSubmitted.value) return;\n        \n        // 先にフラグをリセットしてからインデックスを増やす\n        answerSubmitted.value = false;\n        selectedAnswer.value = null;\n        \n        // `currentQuestionIndex` を1回だけ増やす\n        if (currentQuestionIndex.value < questions.value.length - 1) {\n          currentQuestionIndex.value += 1;\n        }\n        \n        characterMessage.value = '次の問題です！がんばって！';\n        characterState.value = 'normal'; // キャラクターの状態をリセット\n      }\n    };\n\n    // 選択肢のスタイルを取得\n    const getChoiceVariant = (index) => {\n      if (!answerSubmitted.value) return 'primary';\n      \n      if (index === currentQuestion.value.correctAnswer) {\n        return 'accent2';\n      } else if (index === selectedAnswer.value) {\n        return 'accent4';\n      } else {\n        return 'primary';\n      }\n    };\n\n    // ランダムな正解メッセージ\n    const getRandomCorrectMessage = () => {\n      const messages = [\n        'すごい！正解だにゃ！',\n        'さすがだにゃ！',\n        'その調子だにゃ！',\n        '完璧だにゃ！',\n        '君は天才かもしれないにゃ！'\n      ];\n      return messages[Math.floor(Math.random() * messages.length)];\n    };\n\n    // ランダムな不正解メッセージ\n    const getRandomIncorrectMessage = () => {\n      const messages = [\n        'ざんねん！もう少しだったにゃ...',\n        'にゃんと！間違えたにゃ...',\n        '次は頑張るにゃ！',\n        'ドンマイにゃ～',\n        'ねこだって間違えることはあるにゃ'\n      ];\n      return messages[Math.floor(Math.random() * messages.length)];\n    };\n\n    // 単元選択画面へのナビゲーション\n    const navigateToTopics = () => {\n      router.push({ \n        name: 'topics', \n        params: { subjectCode }\n      });\n    };\n\n    const getCharacterType = () => {\n      if (!currentQuestion.value) return 'neko_sensei';\n\n      const difficulty = currentQuestion.value.difficulty;\n      if (difficulty === 3) return 'wanwan_doctor';\n      if (difficulty === 2) return 'fukurou_professor';\n      if (difficulty === 1.5) return 'usagi_coach';\n      return 'neko_sensei';\n    };\n\n    const getCharacterState = () => {\n      if (!answerSubmitted.value) return 'normal';\n      return isCorrect.value ? 'happy' : 'teasing';\n    };\n\n    return {\n      subjects,\n      currentSubject,\n      currentTopic,\n      loading,\n      error,\n      questions,\n      currentQuestionIndex,\n      currentQuestion,\n      selectedAnswer,\n      answerSubmitted,\n      isCorrect,\n      progressPercentage,\n      isLastQuestion,\n      characterMessage,\n      characterType,\n      characterState,\n      feedbackCardElevation,\n      feedbackCardBorder,\n      characterBubbleColor,\n      quizMode,\n      retryQuestionId,\n      retryQuestionIds,\n      isFrequentMistakesMode,\n      selectAnswer,\n      nextQuestion,\n      getChoiceVariant,\n      navigateToTopics,\n      getCharacterType,\n      getCharacterState\n    };\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.quiz-view {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: $spacing-md;\n  display: flex;\n  flex-direction: column;\n  min-height: 70vh;\n}\n\n.quiz-header {\n  margin-bottom: $spacing-lg;\n  \n  .quiz-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    .quiz-progress {\n      width: 100%;\n      max-width: 500px;\n      margin-top: $spacing-md;\n      \n      .progress-text {\n        font-family: $font-body;\n        font-size: 1rem;\n        margin-bottom: $spacing-xs;\n        text-align: center;\n      }\n      \n      .progress-bar {\n        height: 10px;\n        background-color: rgba($primary, 0.2);\n        border-radius: $border-radius-sm;\n        overflow: hidden;\n        \n        .progress-fill {\n          height: 100%;\n          background-color: $accent2;\n          transition: width 0.3s ease;\n        }\n      }\n    }\n  }\n}\n\n.loading-container, .error-container {\n  margin: $spacing-xl auto;\n  max-width: 600px;\n  padding: $spacing-md;\n  text-align: center;\n  \n  p {\n    font-family: $font-body;\n    font-size: 1.2rem;\n  }\n}\n\n.error-container {\n  color: $accent4;\n}\n\n.quiz-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: $spacing-lg;\n}\n\n.question-section {\n  .question-card {\n    padding: $spacing-md;\n    \n    .question-title {\n      margin-bottom: $spacing-md;\n    }\n    \n    .question-text {\n      font-family: $font-body;\n      font-size: 1.2rem;\n      line-height: 1.6;\n    }\n  }\n}\n\n.choices-section {\n  .choices-grid {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: $spacing-md;\n    \n    .choice-button {\n      min-height: 80px;\n      white-space: normal;\n      text-align: left;\n      padding: $spacing-md;\n      font-size: 1.1rem;\n    }\n  }\n}\n\n.feedback-section {\n  margin-top: $spacing-md;\n  \n  .feedback-card {\n    padding: $spacing-md;\n    margin-bottom: $spacing-lg;\n    \n    .feedback-content {\n      .feedback-title {\n        margin-bottom: $spacing-md;\n      }\n      \n      .explanation {\n        font-family: $font-body;\n        font-size: 1.1rem;\n        line-height: 1.6;\n      }\n    }\n  }\n  \n  .navigation-buttons {\n    display: flex;\n    justify-content: center;\n  }\n}\n\n.character-section {\n  margin-top: $spacing-xl;\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  max-width: 300px;\n  margin-left: auto;\n}\n\n.mt-4 {\n  margin-top: $spacing-md;\n}\n\n// レスポンシブデザイン\n@media (max-width: $breakpoint-md) {\n  .choices-section {\n    .choices-grid {\n      grid-template-columns: 1fr;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"character-display\">\n    <GrBubble\n      v-if=\"message\"\n      direction=\"left\"\n      :color=\"bubbleColor\"\n      class=\"character-bubble\"\n    >\n      {{ message }}\n    </GrBubble>\n    \n    <div class=\"character-image\">\n      <img\n        v-if=\"imageUrl\"\n        :src=\"imageUrl\"\n        :alt=\"characterName\"\n        class=\"character-img\"\n      />\n      <div v-else class=\"character-placeholder\" :style=\"{ backgroundColor: characterColor }\">\n        {{ characterName }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed } from 'vue';\nimport GrBubble from '@/components/ui/GrBubble.vue';\n\nexport default {\n  name: 'CharacterDisplay',\n  components: {\n    GrBubble\n  },\n  props: {\n    // キャラクター識別子（'neko_sensei', 'usagi_coach', 'fukurou_professor', 'wanwan_doctor'）\n    character: {\n      type: String,\n      default: 'neko_sensei',\n      validator: (value) => ['neko_sensei', 'usagi_coach', 'fukurou_professor', 'wanwan_doctor'].includes(value)\n    },\n    // キャラクターの状態（'normal', 'happy', 'teasing'）\n    state: {\n      type: String,\n      default: 'normal',\n      validator: (value) => ['normal', 'happy', 'teasing'].includes(value)\n    },\n    // 表示するメッセージ\n    message: {\n      type: String,\n      default: ''\n    }\n  },\n  setup(props) {\n    // キャラクター名\n    const characterName = computed(() => {\n      const names = {\n        neko_sensei: 'ねこ先生',\n        usagi_coach: 'うさぎコーチ',\n        fukurou_professor: 'ふくろう教授',\n        wanwan_doctor: 'わんわん博士'\n      };\n      return names[props.character] || '不明なキャラクター';\n    });\n\n    // キャラクターの色\n    const characterColor = computed(() => {\n      const colors = {\n        neko_sensei: '#FFD166',\n        usagi_coach: '#06D6A0',\n        fukurou_professor: '#118AB2',\n        wanwan_doctor: '#EF476F'\n      };\n      return colors[props.character] || '#CCCCCC';\n    });\n    \n    // 状態に基づく吹き出しの色\n    const bubbleColor = computed(() => {\n      const stateColors = {\n        normal: 'primary',\n        happy: 'accent2',\n        teasing: 'accent4'\n      };\n      \n      return stateColors[props.state] || 'primary';\n    });\n\n    // 画像URL\n    const imageUrl = computed(() => {\n      // GitHub Pages環境で正しく表示されるようにパスを修正\n      // 本番環境ではベースURLが「/cat-teacher-quiz/」、開発環境では「/」\n      const isProd = process.env.NODE_ENV === 'production';\n      const basePathForAssets = isProd ? '/cat-teacher-quiz/assets/' : '/assets/';\n      \n      // デバッグ用にパス情報を出力\n      console.log(`環境: ${isProd ? '本番' : '開発'}, ベースパス: ${basePathForAssets}`);\n      \n      // 絶対パスで指定\n      return `${basePathForAssets}characters/${props.character}/${props.character}_${props.state}.png`;\n    });\n\n    return {\n      characterName,\n      characterColor,\n      bubbleColor,\n      imageUrl\n    };\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.character-display {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 300px;\n  margin: 0 auto;\n}\n\n.character-bubble {\n  margin-bottom: 1rem;\n  max-width: 250px;\n}\n\n.character-image {\n  position: relative;\n  width: 150px;\n  height: 150px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.character-img {\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n}\n\n.character-placeholder {\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  color: white;\n  font-size: 1rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n</style>\n","import { render } from \"./CharacterDisplay.vue?vue&type=template&id=105887f1&scoped=true\"\nimport script from \"./CharacterDisplay.vue?vue&type=script&lang=js\"\nexport * from \"./CharacterDisplay.vue?vue&type=script&lang=js\"\n\nimport \"./CharacterDisplay.vue?vue&type=style&index=0&id=105887f1&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-105887f1\"]])\n\nexport default __exports__","import { render } from \"./QuizView.vue?vue&type=template&id=423a8ff2&scoped=true\"\nimport script from \"./QuizView.vue?vue&type=script&lang=js\"\nexport * from \"./QuizView.vue?vue&type=script&lang=js\"\n\nimport \"./QuizView.vue?vue&type=style&index=0&id=423a8ff2&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-423a8ff2\"]])\n\nexport default __exports__","<template>\n  <div class=\"result-view\">\n    <div class=\"result-header\">\n      <GrTitle tag=\"h1\" size=\"lg\" color=\"primary\">結果発表</GrTitle>\n    </div>\n\n    <div class=\"result-content\">\n      <div class=\"score-display\">\n        <GrTitle tag=\"h2\" size=\"md\" color=\"primary\">\n          正答数: {{ correctCount }} / {{ totalQuestions }}\n        </GrTitle>\n        <p class=\"percentage\">正答率: {{ percentageCorrect }}%</p>\n        \n        <!-- 間違えた問題の通知 -->\n        <div v-if=\"incorrectIds.length > 0\" class=\"mistake-info\">\n          <GrCard elevation=\"sm\" border=\"warning\" class=\"mistake-card\">\n            <p>あなたは {{ totalQuestions - correctCount }} 問の問題に間違えました。</p>\n            <p v-if=\"hasFrequentMistakes\" class=\"frequent-mistake-warning\">\n              <span class=\"warning-icon\">⚠️</span> よく間違える問題があります！\n            </p>\n            <p>\n              <GrButton variant=\"accent3\" size=\"sm\" @click=\"navigateToMistakes\">間違えた問題を確認</GrButton>\n            </p>\n          </GrCard>\n        </div>\n      </div>\n      \n      <!-- キャラクターフィードバック -->\n      <div class=\"character-feedback\">\n        <CharacterDisplay \n          :emotion=\"getFeedbackEmotion()\"\n          :speechText=\"getFeedbackMessage()\"\n        />\n      </div>\n\n      <div class=\"action-buttons\">\n        <GrButton variant=\"secondary\" size=\"lg\" @click=\"tryAgain\">\n          もう一度チャレンジ\n        </GrButton>\n\n        <GrButton variant=\"primary\" size=\"lg\" @click=\"goToHome\">\n          ホームに戻る\n        </GrButton>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nimport GrTitle from '@/components/ui/GrTitle.vue';\nimport GrButton from '@/components/ui/GrButton.vue';\nimport GrCard from '@/components/ui/GrCard.vue';\nimport CharacterDisplay from '@/components/CharacterDisplay.vue';\n\nexport default {\n  name: 'ResultView',\n  components: {\n    GrTitle,\n    GrButton,\n    GrCard,\n    CharacterDisplay\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const store = useStore();\n    const correctCount = ref(0);\n    const totalQuestions = ref(0);\n    const incorrectIds = ref([]);\n    const subjectCode = ref('');\n    const topicCode = ref('');\n    const hasFrequentMistakes = ref(false);\n\n    const percentageCorrect = computed(() => {\n      if (!totalQuestions.value) return 0;\n      return Math.round((correctCount.value / totalQuestions.value) * 100);\n    });\n\n    onMounted(async () => {\n      // 結果データの取得\n      const storedResults = JSON.parse(localStorage.getItem('quizResults')) || {};\n      correctCount.value = storedResults.correctCount || 0;\n      totalQuestions.value = storedResults.totalQuestions || 1;\n      incorrectIds.value = storedResults.incorrectIds || [];\n      subjectCode.value = storedResults.subjectCode || '';\n      topicCode.value = storedResults.topicCode || '';\n      \n      // 間違えた問題の記録\n      if (incorrectIds.value.length > 0) {\n        await recordMistakes();\n      }\n    });\n    \n    const recordMistakes = async () => {\n      // クイズデータを読み込む\n      if (subjectCode.value && topicCode.value) {\n        await store.dispatch('loadProblems', {\n          subjectCode: subjectCode.value,\n          topicCode: topicCode.value\n        });\n        \n        const problems = store.getters.getProblems;\n        const metadata = store.getters.getMetadata;\n        \n        // 間違えた問題を記録\n        incorrectIds.value.forEach(id => {\n          const problem = problems.find(p => p.id === id);\n          if (problem) {\n            store.commit('mistakes/addMistake', {\n              questionId: problem.id,\n              subject: metadata.subject,\n              topic: metadata.topic,\n              question: problem.question,\n              choices: problem.choices,\n              correctAnswer: problem.correctAnswer\n            });\n          }\n        });\n        \n        // ローカルストレージに保存\n        store.dispatch('mistakes/saveToLocalStorage');\n        \n        // よく間違える問題があるかチェック\n        const frequentMistakes = store.getters['mistakes/frequentMistakesBySubject'];\n        hasFrequentMistakes.value = frequentMistakes[metadata.subject] > 0;\n      }\n    };\n    \n    // フィードバックメッセージとキャラクターの表情\n    const getFeedbackEmotion = () => {\n      const percentage = percentageCorrect.value;\n      if (percentage === 100) return 'excited';\n      if (percentage >= 80) return 'happy';\n      if (percentage >= 60) return 'normal';\n      if (percentage >= 40) return 'confused';\n      return 'sad';\n    };\n    \n    const getFeedbackMessage = () => {\n      const percentage = percentageCorrect.value;\n      if (percentage === 100) {\n        return '完璧だニャ！さすがですニャ！';\n      } else if (percentage >= 80) {\n        return 'とても良くできましたニャ！この調子で頑張りましょうニャ！';\n      } else if (percentage >= 60) {\n        return 'まあまあできていますニャ。もう少し頑張りましょうニャ！';\n      } else if (percentage >= 40) {\n        return 'もう少し勉強が必要ですニャ。間違えた問題を復習しましょうニャ。';\n      } else {\n        return 'もっと真面目に勉強しないとダメニャ！逆にランクが下がるよニャ！';\n      }\n    };\n    \n    const navigateToMistakes = () => {\n      router.push({ name: 'mistakes' });\n    };\n\n    const tryAgain = () => {\n      router.push({ name: 'quiz', params: route.params });\n    };\n\n    const goToHome = () => {\n      router.push({ name: 'home' });\n    };\n\n    return {\n      correctCount,\n      totalQuestions,\n      percentageCorrect,\n      incorrectIds,\n      hasFrequentMistakes,\n      getFeedbackEmotion,\n      getFeedbackMessage,\n      navigateToMistakes,\n      tryAgain,\n      goToHome\n    };\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.result-view {\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n}\n\n.result-header {\n  margin-bottom: 2rem;\n}\n\n.score-display {\n  margin: 2rem 0;\n  padding: 1.5rem;\n  background-color: lighten($primary, 60%);\n  border-radius: $border-radius-md;\n  \n  .percentage {\n    font-size: 1.2rem;\n    font-weight: bold;\n    margin: 0.5rem 0;\n  }\n  \n  .mistake-info {\n    margin-top: 1rem;\n  }\n  \n  .mistake-card {\n    padding: 0.75rem;\n    \n    p {\n      margin: 0.5rem 0;\n    }\n    \n    .frequent-mistake-warning {\n      color: $warning;\n      font-weight: bold;\n      \n      .warning-icon {\n        margin-right: 0.25rem;\n      }\n    }\n  }\n}\n\n.action-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-top: 2rem;\n  \n  @media (max-width: $breakpoint-sm) {\n    flex-direction: column;\n    width: 100%;\n  }\n  \n  .gr-button {\n    min-width: 200px;\n    \n    @media (max-width: $breakpoint-sm) {\n      margin-bottom: 1rem;\n      width: 100%;\n    }\n  }\n}\n.character-feedback {\n  margin: 2rem 0;\n}\n</style>\n","import { render } from \"./ResultView.vue?vue&type=template&id=4fb23810&scoped=true\"\nimport script from \"./ResultView.vue?vue&type=script&lang=js\"\nexport * from \"./ResultView.vue?vue&type=script&lang=js\"\n\nimport \"./ResultView.vue?vue&type=style&index=0&id=4fb23810&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4fb23810\"]])\n\nexport default __exports__","<template>\n  <div class=\"component-preview\">\n    <h1 class=\"text-center mb-5\">グラフィックレコーディング風UIコンポーネント</h1>\n    \n    <section class=\"preview-section\">\n      <h2 class=\"section-title\">タイトルコンポーネント (GrTitle)</h2>\n      <div class=\"preview-container\">\n        <GrTitle tag=\"h1\" size=\"xl\" color=\"primary\">プライマリーの特大タイトル</GrTitle>\n        <GrTitle tag=\"h2\" size=\"lg\" color=\"accent1\">アクセント1の大タイトル</GrTitle>\n        <GrTitle tag=\"h3\" size=\"md\" color=\"accent2\">アクセント2の中タイトル</GrTitle>\n        <GrTitle tag=\"h4\" size=\"sm\" color=\"accent3\">アクセント3の小タイトル</GrTitle>\n        <GrTitle tag=\"div\" size=\"sm\" color=\"accent4\">アクセント4のdivタイトル</GrTitle>\n      </div>\n    </section>\n    \n    <section class=\"preview-section\">\n      <h2 class=\"section-title\">カードコンポーネント (GrCard)</h2>\n      <div class=\"preview-container cards-grid\">\n        <GrCard elevation=\"sm\" border=\"primary\">\n          <p>プライマリーの枠線と小さい影のカード</p>\n        </GrCard>\n        <GrCard elevation=\"md\" border=\"accent1\">\n          <p>アクセント1の枠線と中くらいの影のカード</p>\n        </GrCard>\n        <GrCard elevation=\"lg\" border=\"accent2\">\n          <p>アクセント2の枠線と大きい影のカード</p>\n        </GrCard>\n        <GrCard elevation=\"md\" border=\"accent3\">\n          <p>アクセント3の枠線と中くらいの影のカード</p>\n        </GrCard>\n        <GrCard elevation=\"md\" border=\"accent4\">\n          <p>アクセント4の枠線と中くらいの影のカード</p>\n        </GrCard>\n        <GrCard elevation=\"none\" border=\"none\">\n          <p>枠線なし、影なしのカード</p>\n        </GrCard>\n      </div>\n    </section>\n    \n    <section class=\"preview-section\">\n      <h2 class=\"section-title\">ボタンコンポーネント (GrButton)</h2>\n      <div class=\"preview-container buttons-container\">\n        <div class=\"button-row\">\n          <GrButton variant=\"primary\" size=\"sm\">小さいボタン</GrButton>\n          <GrButton variant=\"primary\" size=\"md\">中くらいボタン</GrButton>\n          <GrButton variant=\"primary\" size=\"lg\">大きいボタン</GrButton>\n        </div>\n        <div class=\"button-row\">\n          <GrButton variant=\"primary\">プライマリー</GrButton>\n          <GrButton variant=\"accent1\">アクセント1</GrButton>\n          <GrButton variant=\"accent2\">アクセント2</GrButton>\n          <GrButton variant=\"accent3\">アクセント3</GrButton>\n          <GrButton variant=\"accent4\">アクセント4</GrButton>\n        </div>\n        <div class=\"button-row\">\n          <GrButton variant=\"primary\" disabled>無効ボタン</GrButton>\n          <GrButton variant=\"accent2\" fullWidth>全幅ボタン</GrButton>\n        </div>\n      </div>\n    </section>\n    \n    <section class=\"preview-section\">\n      <h2 class=\"section-title\">吹き出しコンポーネント (GrBubble)</h2>\n      <div class=\"preview-container bubbles-container\">\n        <div class=\"bubble-row\">\n          <GrBubble direction=\"bottom\" color=\"white\">\n            <p>下向き白吹き出し</p>\n          </GrBubble>\n          <GrBubble direction=\"top\" color=\"accent1\">\n            <p>上向きアクセント1吹き出し</p>\n          </GrBubble>\n        </div>\n        <div class=\"bubble-row\">\n          <GrBubble direction=\"right\" color=\"accent2\">\n            <p>右向きアクセント2吹き出し</p>\n          </GrBubble>\n          <GrBubble direction=\"left\" color=\"accent3\">\n            <p>左向きアクセント3吹き出し</p>\n          </GrBubble>\n        </div>\n        <div class=\"bubble-row\">\n          <GrBubble direction=\"bottom\" color=\"primary\">\n            <p>下向きプライマリー吹き出し</p>\n          </GrBubble>\n          <GrBubble direction=\"bottom\" color=\"accent4\">\n            <p>下向きアクセント4吹き出し</p>\n          </GrBubble>\n        </div>\n      </div>\n    </section>\n    \n    <section class=\"preview-section\">\n      <h2 class=\"section-title\">ハイライトコンポーネント (GrHighlight)</h2>\n      <div class=\"preview-container\">\n        <p>\n          これは<GrHighlight color=\"yellow\">黄色のハイライト</GrHighlight>です。\n          これは<GrHighlight color=\"orange\">オレンジのハイライト</GrHighlight>です。\n          これは<GrHighlight color=\"red\">赤のハイライト</GrHighlight>です。\n        </p>\n        <p>\n          <GrHighlight color=\"yellow\" :inline=\"false\">\n            インラインではないハイライトブロックです。これはより長いテキストに使用できます。\n            複数行にまたがる場合もあります。\n          </GrHighlight>\n        </p>\n      </div>\n    </section>\n    \n    <section class=\"preview-section\">\n      <h2 class=\"section-title\">組み合わせ例</h2>\n      <div class=\"preview-container\">\n        <GrCard elevation=\"md\" border=\"primary\">\n          <GrTitle tag=\"h3\" size=\"md\" color=\"accent2\">猫先生からの挑戦状</GrTitle>\n          <p>\n            <GrHighlight color=\"yellow\">算数の問題</GrHighlight>に挑戦してみましょう！\n          </p>\n          <div class=\"mt-4\">\n            <GrBubble direction=\"left\" color=\"accent1\">\n              <p>この問題、<GrHighlight color=\"red\">難しい</GrHighlight>かもしれないニャ〜</p>\n            </GrBubble>\n          </div>\n          <div class=\"mt-4 text-center\">\n            <GrButton variant=\"accent3\" size=\"lg\">挑戦する</GrButton>\n          </div>\n        </GrCard>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport GrTitle from '@/components/ui/GrTitle.vue';\nimport GrCard from '@/components/ui/GrCard.vue';\nimport GrButton from '@/components/ui/GrButton.vue';\nimport GrBubble from '@/components/ui/GrBubble.vue';\nimport GrHighlight from '@/components/ui/GrHighlight.vue';\n\nexport default {\n  name: 'ComponentPreview',\n  components: {\n    GrTitle,\n    GrCard,\n    GrButton,\n    GrBubble,\n    GrHighlight\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/variables.scss';\n\n.component-preview {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: $spacing-xl;\n}\n\n.preview-section {\n  margin-bottom: $spacing-xxl;\n  \n  .section-title {\n    margin-bottom: $spacing-lg;\n    padding-bottom: $spacing-xs;\n    border-bottom: 2px solid $primary;\n  }\n}\n\n.preview-container {\n  background-color: #f5f5f5;\n  padding: $spacing-lg;\n  border-radius: $border-radius-lg;\n}\n\n.cards-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: $spacing-lg;\n}\n\n.buttons-container {\n  .button-row {\n    display: flex;\n    flex-wrap: wrap;\n    gap: $spacing-md;\n    margin-bottom: $spacing-lg;\n    \n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n\n.bubbles-container {\n  .bubble-row {\n    display: flex;\n    flex-wrap: wrap;\n    gap: $spacing-xl;\n    margin-bottom: $spacing-xl;\n    \n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n</style>\n","import { render } from \"./ComponentPreview.vue?vue&type=template&id=430a4086&scoped=true\"\nimport script from \"./ComponentPreview.vue?vue&type=script&lang=js\"\nexport * from \"./ComponentPreview.vue?vue&type=script&lang=js\"\n\nimport \"./ComponentPreview.vue?vue&type=style&index=0&id=430a4086&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-430a4086\"]])\n\nexport default __exports__","<template>\n  <div class=\"mistakes-view\">\n    <!-- ヘッダー -->\n    <div class=\"mistakes-header\">\n      <GrTitle tag=\"h1\" size=\"lg\" color=\"primary\">間違えた問題</GrTitle>\n    </div>\n\n    <!-- 間違えた問題がない場合 -->\n    <template v-if=\"totalMistakes === 0\">\n      <div class=\"empty-state\">\n        <div class=\"empty-image\">\n          <CharacterDisplay\n            :image=\"'sleepy_cat.webp'\"\n            :size=\"'large'\"\n          />\n        </div>\n        <GrBubble>\n          <p>まだ間違えた問題はありません。</p>\n          <p>クイズに挑戦して、苦手な問題を見つけましょう！</p>\n        </GrBubble>\n        <div class=\"back-button\">\n          <GrButton variant=\"primary\" @click=\"goToHome\">ホームに戻る</GrButton>\n        </div>\n      </div>\n    </template>\n\n    <!-- 間違えた問題がある場合 -->\n    <template v-else>\n      <!-- 科目タブ -->\n      <div class=\"subject-tabs\">\n        <div\n          v-for=\"subject in availableSubjects\"\n          :key=\"subject.code\"\n          class=\"subject-tab\"\n          :class=\"{ active: selectedSubject === subject.code }\"\n          @click=\"selectSubject(subject.code)\"\n        >\n          <div class=\"tab-content\">\n            <span>{{ subject.name }}</span>\n            <span class=\"count\">{{ mistakesBySubject[subject.code] || 0 }}</span>\n            <span\n              v-if=\"frequentMistakesBySubject[subject.code]\"\n              class=\"frequent-marker\"\n              :title=\"`よく間違える問題が${frequentMistakesBySubject[subject.code]}個あります`\"\n            >★</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 問題リスト -->\n      <div class=\"mistakes-content\" v-if=\"selectedSubject && filteredMistakes.length > 0\">\n        <!-- アクションボタンエリア -->\n        <div class=\"mistake-actions-area\">\n          <!-- 一括挑戦ボタン -->\n          <GrButton\n            variant=\"primary\"\n            @click=\"retryAllMistakes(false)\"\n          >\n            すべての問題に挑戦\n          </GrButton>\n          \n          <!-- よく間違える問題に挑戦ボタン -->\n          <GrButton\n            v-if=\"hasFrequentMistakes\"\n            variant=\"accent4\"\n            @click=\"retryAllMistakes(true)\"\n          >\n            よく間違える問題に挑戦\n          </GrButton>\n          \n          <!-- すべてクリアボタン -->\n          <GrButton\n            v-if=\"hasClearableMistakes\"\n            variant=\"warning\"\n            @click=\"showClearAllConfirmation = true\"\n          >\n            すべてクリア\n          </GrButton>\n        </div>\n        \n        <!-- 問題カード -->\n        <div class=\"mistake-cards\">\n          <GrCard\n            v-for=\"mistake in filteredMistakes\"\n            :key=\"mistake.questionId\"\n            :class=\"{ 'frequent-mistake': mistake.count >= 2 }\"\n          >\n            <div class=\"mistake-header\">\n              <div class=\"mistake-info\">\n                <span class=\"mistake-count\">{{ mistake.count }}回間違えました</span>\n                <span\n                  v-if=\"mistake.count >= 2\"\n                  class=\"frequent-badge\"\n                  title=\"よく間違える問題\"\n                >★ よく間違える問題</span>\n              </div>\n              <div class=\"mistake-actions\">\n                <GrButton\n                  variant=\"primary\"\n                  size=\"sm\"\n                  class=\"retry-button\"\n                  @click=\"retryQuestion(mistake)\"\n                >\n                  再挑戦\n                </GrButton>\n                <GrButton\n                  variant=\"warning\"\n                  size=\"sm\"\n                  @click=\"confirmClearMistake(mistake.questionId)\"\n                >\n                  クリア\n                </GrButton>\n              </div>\n            </div>\n            \n            <div class=\"mistake-question\">\n              <GrHighlight>{{ mistake.question }}</GrHighlight>\n            </div>\n            \n            <!-- 解説セクション -->\n            <div class=\"mistake-explanation\">\n              <!-- 解説セクション - データ取得中はローディング表示 -->\n              <div class=\"explanation-section\" v-if=\"isExplanationLoading(mistake)\">\n                <h4 class=\"explanation-title\">解説を読み込み中...</h4>\n                <p class=\"explanation-loading\">お待ちください</p>\n              </div>\n              \n              <!-- 解説が見つからない場合 -->\n              <div class=\"explanation-section\" v-else-if=\"!isExplanationLoading(mistake) && getExplanation(mistake) === null\">\n                <h4 class=\"explanation-title\">解説が見つかりません</h4>\n                <p class=\"explanation-debug\">利用可能なデータキー: {{ Object.keys(mistake).join(', ') }}</p>\n              </div>\n              \n              <!-- 解説データがあれば表示 -->\n              <div class=\"explanation-section\" v-else-if=\"getExplanation(mistake)\">\n                <h4 class=\"explanation-title\">解説</h4>\n                <p class=\"explanation-text\">{{ getExplanation(mistake) }}</p>\n              </div>\n              \n              <!-- 解説が見つからない場合のデバッグ情報 -->\n              <div v-else class=\"explanation-section debug-section\">\n                <h4 class=\"explanation-title\">解説が見つかりません</h4>\n                <p class=\"explanation-debug\">\n                  利用可能なデータキー: {{ Object.keys(mistake).join(', ') }}\n                </p>\n              </div>\n            </div>\n            \n\n          </GrCard>\n        </div>\n      </div>\n      \n      <!-- 戻るボタン -->\n      <div class=\"back-button\">\n        <GrButton variant=\"primary\" @click=\"goToHome\">ホームに戻る</GrButton>\n      </div>\n    </template>\n    \n    <!-- クリア確認モーダル - 個別の問題 -->\n    <div v-if=\"showClearConfirmation\" class=\"confirm-modal\">\n      <div class=\"modal-content\">\n        <h2>確認</h2>\n        <p>この問題をクリアしますか？</p>\n        <p class=\"warning-text\">※クリアした問題は元に戻せません</p>\n        <div class=\"modal-actions\">\n          <GrButton\n            variant=\"secondary\"\n            @click=\"showClearConfirmation = false\"\n          >\n            キャンセル\n          </GrButton>\n          <GrButton\n            variant=\"warning\"\n            @click=\"clearMistake\"\n          >\n            クリアする\n          </GrButton>\n        </div>\n      </div>\n    </div>\n    \n    <!-- クリア確認モーダル - すべての問題 -->\n    <div v-if=\"showClearAllConfirmation\" class=\"confirm-modal\">\n      <div class=\"modal-content\">\n        <h2>確認</h2>\n        <p>クリア可能なすべての問題をクリアしますか？</p>\n        <p class=\"warning-text\">※クリアした問題は元に戻せません</p>\n        <div class=\"modal-actions\">\n          <GrButton\n            variant=\"secondary\"\n            @click=\"showClearAllConfirmation = false\"\n          >\n            キャンセル\n          </GrButton>\n          <GrButton\n            variant=\"warning\"\n            @click=\"clearAllMistakes\"\n          >\n            すべてクリアする\n          </GrButton>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport DataManager from '@/services/DataManager';\nimport GrTitle from '@/components/ui/GrTitle.vue';\nimport GrButton from '@/components/ui/GrButton.vue';\nimport GrCard from '@/components/ui/GrCard.vue';\nimport GrHighlight from '@/components/ui/GrHighlight.vue';\nimport GrBubble from '@/components/ui/GrBubble.vue';\nimport CharacterDisplay from '@/components/CharacterDisplay.vue';\n\nexport default {\n  name: 'MistakesView',\n  components: {\n    GrTitle,\n    GrButton,\n    GrCard,\n    GrHighlight,\n    GrBubble,\n    CharacterDisplay\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    \n    // リアクティブな状態\n    const selectedSubject = ref(null);\n    const showClearConfirmation = ref(false);\n    const showClearAllConfirmation = ref(false);\n    const mistakeToDelete = ref(null);\n    \n    // 利用可能な科目\n    const availableSubjects = [\n      { code: 'science', name: '理科' },\n      { code: 'social', name: '社会' }\n    ];\n    \n    // 科目をロード（並び替えられた際に使用）\n    const loadSubjects = () => {\n      // 初期選択科目を設定（間違いが存在する科目を選択）\n      if (!selectedSubject.value && Object.keys(mistakesBySubject.value).length > 0) {\n        const subjects = Object.keys(mistakesBySubject.value);\n        selectedSubject.value = subjects[0];\n      }\n    };\n    \n    // 総間違い数\n    const totalMistakes = computed(() => {\n      return store.getters['mistakes/totalMistakes'];\n    });\n    \n    // 科目ごとの間違い数\n    const mistakesBySubject = computed(() => {\n      return store.getters['mistakes/mistakesBySubject'];\n    });\n    \n    // よく間違える問題の数（科目ごと）\n    const frequentMistakesBySubject = computed(() => {\n      return store.getters['mistakes/frequentMistakesBySubject'];\n    });\n    \n    // よく間違える問題があるかどうか\n    const hasFrequentMistakes = computed(() => {\n      return filteredMistakes.value.some(mistake => mistake.count >= 2);\n    });\n    \n    // フィルタリングされた間違い一覧\n    const filteredMistakes = computed(() => {\n      if (!selectedSubject.value) return [];\n      const mistakes = store.getters['mistakes/mistakesListBySubject'](selectedSubject.value);\n      \n      // デバッグ用に間違いデータの内容を確認\n      console.log('間違い一覧データ:', mistakes);\n      if (mistakes.length > 0) {\n        console.log('最初の間違いデータサンプル:', {\n          問題ID: mistakes[0].questionId,\n          問題文: mistakes[0].question,\n          正解選択肢: mistakes[0].correctAnswer,\n          解説: mistakes[0].explanation,\n          データキー: Object.keys(mistakes[0])\n        });\n      }\n      \n      return mistakes;\n    });\n    \n    // クリア可能な間違いがあるかどうか\n    const hasClearableMistakes = computed(() => {\n      return filteredMistakes.value.some(mistake => mistake.isClearable);\n    });\n    \n    // ロックメッセージの取得\n    const getLockedMessage = (mistake) => {\n      return store.getters['mistakes/getLockedMessage'](mistake);\n    };\n    \n    // 科目を選択\n    const selectSubject = (subjectCode) => {\n      selectedSubject.value = subjectCode;\n    };\n    \n    // 個別の間違いをクリアする確認\n    const confirmClearMistake = (questionId) => {\n      mistakeToDelete.value = questionId;\n      showClearConfirmation.value = true;\n    };\n    \n    // 個別の間違いをクリア\n    const clearMistake = () => {\n      if (mistakeToDelete.value) {\n        store.dispatch('mistakes/clearMistake', mistakeToDelete.value);\n        showClearConfirmation.value = false;\n        mistakeToDelete.value = null;\n        \n        // 間違いがなくなった場合、選択科目をリセット\n        if (totalMistakes.value === 0) {\n          selectedSubject.value = null;\n        } else {\n          loadSubjects();\n        }\n      }\n    };\n    \n    // すべての間違いをクリア\n    const clearAllMistakes = () => {\n      store.dispatch('mistakes/clearAllMistakes');\n      showClearAllConfirmation.value = false;\n      \n      // 間違いがなくなった場合、選択科目をリセット\n      if (totalMistakes.value === 0) {\n        selectedSubject.value = null;\n      } else {\n        loadSubjects();\n      }\n    };\n    \n    // ホーム画面に戻る\n    const goToHome = () => {\n      router.push({ name: 'home' });\n    };\n    \n    // 間違えた問題に再挑戦する\n    const retryQuestion = (mistake) => {\n      // 間違えた問題のIDと科目、トピックを取得\n      const questionId = mistake.questionId;\n      const subjectCode = mistake.subject; // mistake.subjectCodeではなくmistake.subjectを使用\n      const topicCode = mistake.topic; // mistake.topicCodeではなくmistake.topicを使用\n      \n      console.log('再挑戦する問題の情報:', {\n        問題ID: questionId,\n        科目コード: subjectCode,\n        トピックコード: topicCode\n      });\n      \n      // 科目コードとトピックコードが正しく取得できているか確認\n      if (!subjectCode || !topicCode) {\n        console.error('科目コードまたはトピックコードが見つかりません', mistake);\n        return;\n      }\n      \n      // 専用のクイズモードを作成（1問だけのクイズ）\n      const quizParams = {\n        mode: 'retry',\n        questionId\n      };\n      \n      // クイズページに遷移\n      router.push({\n        name: 'quiz',\n        params: {\n          subjectCode,\n          topicCode\n        },\n        query: quizParams\n      });\n    };\n    \n    // すべての間違えた問題またはよく間違える問題に挑戦する\n    const retryAllMistakes = (frequentOnly = false) => {\n      if (!selectedSubject.value || filteredMistakes.value.length === 0) return;\n      \n      // 対象となる問題をフィルタリング\n      let targetMistakes = [...filteredMistakes.value];\n      if (frequentOnly) {\n        // よく間違える問題（count >= 2）のみにフィルタリング\n        targetMistakes = targetMistakes.filter(mistake => mistake.count >= 2);\n      }\n      \n      if (targetMistakes.length === 0) {\n        console.warn('対象となる問題がありません');\n        return;\n      }\n      \n      // 問題のIDリストを作成\n      const questionIds = targetMistakes.map(mistake => mistake.questionId);\n      \n      // 選択された科目を使用\n      const subjectCode = selectedSubject.value;\n      \n      // 各問題のトピックコードを取得 (mistakeにはtopicプロパティとして保存されている)\n      const uniqueTopicCodes = [...new Set(targetMistakes.map(mistake => mistake.topic))];\n      \n      // トピックコードの選択 - 共通のコードがあれば使用、なければ最初の問題のコードを使用\n      const topicCode = uniqueTopicCodes.length === 1 ? uniqueTopicCodes[0] : targetMistakes[0].topic;\n      \n      // 問題が複数のトピックにまたがる場合のログ\n      if (uniqueTopicCodes.length > 1) {\n        console.log('複数のトピックにまたがる問題があります:', uniqueTopicCodes);\n      }\n      \n      console.log('再挑戦パラメータ確認:', {\n        科目コード: subjectCode,\n        トピックコード: topicCode,\n        問題数: questionIds.length,\n        対象トピック数: uniqueTopicCodes.length,\n        よく間違えるモード: frequentOnly\n      });\n      \n      // 科目コードとトピックコードが存在するか確認\n      if (!subjectCode || !topicCode) {\n        console.error('科目またはトピックが正しく取得できませんでした');\n        return;\n      }\n      \n      // クイズパラメータを作成\n      const quizParams = {\n        mode: 'retryMultiple',\n        questionIds: JSON.stringify(questionIds),\n        frequentOnly: frequentOnly ? 'true' : 'false'\n      };\n      \n      // 間違えた問題のクイズページに遷移\n      // トピックコードは必須パラメータであるため、確実に渡す\n      try {\n        router.push({\n          name: 'quiz',\n          params: {\n            subjectCode,\n            topicCode\n          },\n          query: quizParams\n        });\n        \n        console.log('クイズに遷移します:', {\n          科目: subjectCode,\n          トピック: topicCode,\n          問題数: questionIds.length,\n          モード: frequentOnly ? 'よく間違える問題' : 'すべての間違えた問題'\n        });\n      } catch (error) {\n        console.error('クイズページへの遷移中にエラーが発生しました:', error);\n      }\n    };\n    \n    // コンポーネントマウント時の処理\n    onMounted(() => {\n      // クリア可能状態を更新\n      store.commit('mistakes/updateClearableStatus');\n      loadSubjects();\n      \n      // 全ての間違いに対して解説データを取得\n      filteredMistakes.value.forEach(mistake => {\n        fetchExplanation(mistake);\n      });\n    });\n    \n    // DataManagerインスタンスを作成\n    const dataManager = new DataManager();\n    \n    // 解説データを保持するリアクティブなオブジェクト\n    const explanations = ref({});\n    const explanationLoading = ref({});\n    \n    // ローディング状態を確認するヘルパーメソッド\n    const isExplanationLoading = (mistake) => {\n      return mistake && mistake.questionId && explanationLoading.value[mistake.questionId] === true;\n    };\n    \n    // データファイルから解説を非同期で取得するメソッド\n    const fetchExplanation = async (mistake) => {\n      const mistakeId = mistake.questionId;\n      \n      // 既に取得済みまたは取得中なら何もしない\n      if (explanations.value[mistakeId] !== undefined || explanationLoading.value[mistakeId]) {\n        return;\n      }\n\n      // ローディング状態をセット\n      explanationLoading.value[mistakeId] = true;\n\n      try {\n        // まずはローカルのデータから確認\n        if (mistake.explanation) {\n          explanations.value[mistakeId] = mistake.explanation;\n          return;\n        }\n\n        // 問題データファイルから取得してみる\n        if (mistake.subject && mistake.topic && mistake.questionId) {\n          try {\n            // データファイル名を形式に合わせて生成 (`public/data/{subject}_{topic}.json`)\n            const fileName = `${mistake.subject}_${mistake.topic}.json`;\n\n            // データファイルからデータを取得\n            const problemsData = await dataManager.loadProblemFile(fileName);\n            if (problemsData && problemsData.questions) {\n              // 問題データを找す\n              const question = problemsData.questions.find(q => q.id === mistake.questionId);\n              if (question && question.explanation) {\n                explanations.value[mistakeId] = question.explanation;\n                return;\n              }\n            }\n          } catch (e) {\n            console.error('データ取得エラー:', e);\n          }\n        }\n\n        // 解説が見つからない場合は空に設定\n        explanations.value[mistakeId] = null;\n\n      } finally {\n        // ローディング状態終了\n        explanationLoading.value[mistakeId] = false;\n      }\n    };\n    \n    // 解説データをテンプレートで参照するメソッド\n    const getExplanation = (mistake) => {\n      const mistakeId = mistake.questionId;\n      \n      // まだ取得していない場合は非同期で取得実行\n      if (explanations.value[mistakeId] === undefined) {\n        fetchExplanation(mistake);\n        return null;  // 取得中は空を返す\n      }\n      \n      return explanations.value[mistakeId];\n    };\n    \n    return {\n      selectedSubject,\n      availableSubjects,\n      isExplanationLoading,\n      totalMistakes,\n      mistakesBySubject,\n      frequentMistakesBySubject,\n      filteredMistakes,\n      hasClearableMistakes,\n      showClearConfirmation,\n      showClearAllConfirmation,\n      getLockedMessage,\n      selectSubject,\n      confirmClearMistake,\n      clearMistake,\n      clearAllMistakes,\n      goToHome,\n      retryQuestion,\n      retryAllMistakes,\n      hasFrequentMistakes,\n      getExplanation,\n      explanations\n    };\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.mistakes-view {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 1rem;\n}\n\n.mistakes-header {\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1.5rem;\n  padding: 2rem;\n  \n  .empty-image {\n    width: 150px;\n    height: 150px;\n  }\n}\n\n.subject-tabs {\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n  \n  .subject-tab {\n    cursor: pointer;\n    padding: 0.75rem 1.5rem;\n    border-radius: 8px;\n    background-color: #f0f0f0;\n    transition: all 0.3s ease;\n    \n    &.active {\n      background-color: #2194f3;\n      color: white;\n    }\n    \n    .tab-content {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n    }\n    \n    .count {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      min-width: 1.5rem;\n      height: 1.5rem;\n      padding: 0 0.25rem;\n      border-radius: 1rem;\n      background-color: rgba(0, 0, 0, 0.2);\n      color: white;\n      font-size: 0.75rem;\n    }\n    \n    .frequent-marker {\n      color: #ff9800;\n      font-weight: bold;\n    }\n  }\n}\n\n.mistakes-content {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  \n  .mistake-actions {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 0.5rem;\n  }\n}\n\n.mistake-cards {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  \n  .frequent-mistake {\n    border-left: 4px solid #ff9800;\n  }\n}\n\n.mistake-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.75rem;\n  \n  .mistake-info {\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n  }\n  \n  .mistake-count {\n    font-weight: bold;\n    color: #f44336;\n  }\n  \n  .frequent-badge {\n    color: #ff9800;\n    font-weight: bold;\n    font-size: 0.85rem;\n  }\n}\n\n.mistake-question {\n  margin-bottom: 1rem;\n  font-size: 1.1rem;\n}\n\n.mistake-choices {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n  \n  .mistake-choice {\n    display: flex;\n    align-items: flex-start;\n    gap: 0.5rem;\n    padding: 0.5rem;\n    border-radius: 4px;\n    \n    &.correct-answer {\n      background-color: rgba(46, 204, 113, 0.15);\n    }\n    \n    .choice-number {\n      font-weight: bold;\n      min-width: 1.5rem;\n    }\n    \n    .correct-marker {\n      margin-left: auto;\n      color: #2ecc71;\n      font-weight: bold;\n    }\n  }\n}\n\n.mistake-explanation {\n  margin-top: 0.5rem;\n  \n  .correct-answer-section {\n    padding: 1rem;\n    background-color: #e8f6f3;\n    border-left: 4px solid #2ecc71;\n    border-radius: 4px;\n    margin-bottom: 0.5rem;\n    \n    .correct-answer-title {\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n      font-size: 1rem;\n      color: #2ecc71;\n      font-weight: bold;\n    }\n    \n    .correct-answer-text {\n      margin: 0;\n      font-size: 1rem;\n      line-height: 1.5;\n      font-weight: 500;\n    }\n  }\n  \n  .explanation-section {\n    padding: 1rem;\n    background-color: #f9f9f9;\n    border-left: 4px solid #3498db;\n    border-radius: 4px;\n    \n    .explanation-title {\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n      font-size: 1rem;\n      color: #3498db;\n      font-weight: bold;\n    }\n    \n    .explanation-text {\n      margin: 0;\n      font-size: 0.95rem;\n      line-height: 1.5;\n    }\n  }\n}\n\n.mistake-lock-info {\n  padding: 0.75rem;\n  background-color: #f8f8f8;\n  border-radius: 4px;\n  border-left: 4px solid #f44336;\n  \n  .lock-message {\n    color: #f44336;\n    font-size: 0.9rem;\n  }\n}\n\n.back-button {\n  display: flex;\n  justify-content: center;\n  margin-top: 2rem;\n}\n\n.confirm-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  \n  .modal-content {\n    background-color: white;\n    padding: 2rem;\n    border-radius: 8px;\n    max-width: 400px;\n    width: 100%;\n    \n    h2 {\n      margin-top: 0;\n      margin-bottom: 1rem;\n    }\n    \n    .warning-text {\n      color: #f44336;\n      font-size: 0.9rem;\n      margin-bottom: 1.5rem;\n    }\n    \n    .modal-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n    }\n  }\n}\n</style>\n","/**\n * DataManager クラス\n * JSONデータを非同期に読み込み、科目・トピックリスト取得、問題データ取得などの機能を提供します\n * 複数のデータファイルに対応し、効率的なキャッシュ戦略を実装しています\n */\nclass DataManager {\n  constructor() {\n    // キャッシュデータを保持するオブジェクト\n    this.cache = {\n      index: null,         // subjects.jsonのキャッシュ\n      problemFiles: {},   // 問題ファイルのキャッシュ（ファイル単位）\n      topicProblems: {},  // トピック単位の問題キャッシュ（複数ファイルの結合結果）\n      questionById: {}    // 問題IDによる検索用キャッシュ\n    };\n    \n    // バージョン管理（キャッシュ制御用）\n    this.version = '1.1.0'; // キャッシュを強制的にクリアするために更新\n    this.checkCacheVersion();\n  }\n  \n  /**\n   * キャッシュバージョンをチェックし、必要に応じてクリアします\n   */\n  checkCacheVersion() {\n    const savedVersion = localStorage.getItem('dataManagerVersion');\n    if (savedVersion !== this.version) {\n      // バージョンが異なる場合はキャッシュをクリア\n      console.log(`キャッシュバージョンが異なるためクリアします (${savedVersion} → ${this.version})`);\n      this.clearCache();\n      localStorage.setItem('dataManagerVersion', this.version);\n    }\n  }\n  \n  /**\n   * キャッシュをクリアします\n   * @param {boolean} clearAll 全てのキャッシュをクリアするかどうか、デフォルトは全てクリア\n   */\n  clearCache(clearAll = true) {\n    if (clearAll) {\n      // 全てのメモリ内キャッシュをクリア\n      this.cache = {\n        index: null,\n        problemFiles: {},\n        topicProblems: {},\n        questionById: {}\n      };\n      \n      // ローカルストレージの関連キャッシュを全てクリア\n      localStorage.removeItem('subjectsData');\n      localStorage.removeItem('dataManagerVersion');\n      \n      // subjects.jsonの読み込み時にキャッシュバスティングを確実に行うためにtimestampを更新\n      this.timestamp = new Date().getTime();\n      \n      console.log('キャッシュデータを完全にクリアしました');\n    } else {\n      // インデックスは保持し、問題データのみクリア\n      this.cache.problemFiles = {};\n      this.cache.topicProblems = {};\n      this.cache.questionById = {};\n      console.log('問題データのキャッシュをクリアしました');\n    }\n  }\n\n  /**\n   * インデックスファイル（subjects.json）を非同期に読み込みます\n   * @returns {Promise<Object>} 読み込まれたインデックスデータ\n   */\n  async loadIndex() {\n    // キャッシュに存在する場合はキャッシュから返す\n    if (this.cache.index) {\n      return this.cache.index;\n    }\n    \n    try {\n      // ベースURLを考慮したパスを生成（末尾のスラッシュを含まない形式）\n      const baseUrl = process.env.NODE_ENV === 'production' ? '/cat-teacher-quiz' : '';\n      \n      // キャッシュバスティングのためのタイムスタンプを追加\n      if (!this.timestamp) {\n        this.timestamp = new Date().getTime();\n      }\n      const response = await fetch(`${baseUrl}/data/subjects.json?v=${this.timestamp}`);\n      \n      if (!response.ok) {\n        throw new Error(`インデックスデータの読み込みに失敗しました: ${response.status}`);\n      }\n      \n      const indexData = await response.json();\n      // キャッシュに保存\n      this.cache.index = indexData;\n      \n      // ローカルストレージにも保存（デバッグ用）\n      localStorage.setItem('subjectsData', JSON.stringify(indexData));\n      \n      return indexData;\n    } catch (error) {\n      console.error('インデックスデータの読み込み中にエラーが発生しました:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 科目リストを取得します\n   * @returns {Promise<Array>} 科目リスト\n   */\n  async getSubjects() {\n    const indexData = await this.loadIndex();\n    return indexData.subjects;\n  }\n\n  /**\n   * 特定の科目のトピックリストを取得します\n   * @param {string} subjectCode 科目コード\n   * @returns {Promise<Array>} トピックリスト\n   */\n  async getTopics(subjectCode) {\n    const indexData = await this.loadIndex();\n    \n    const subject = indexData.subjects.find(s => s.code === subjectCode);\n    if (!subject) {\n      throw new Error(`指定された科目コード「${subjectCode}」は存在しません。`);\n    }\n    \n    return subject.topics;\n  }\n\n  /**\n   * 特定のトピックに関連するデータファイルのリストを取得します\n   * @param {string} subjectCode 科目コード\n   * @param {string} topicCode トピックコード\n   * @returns {Promise<Array>} データファイルのリスト\n   */\n  async getDataFiles(subjectCode, topicCode) {\n    const indexData = await this.loadIndex();\n    \n    const subject = indexData.subjects.find(s => s.code === subjectCode);\n    if (!subject) {\n      throw new Error(`指定された科目コード「${subjectCode}」は存在しません。`);\n    }\n    \n    const topic = subject.topics.find(t => t.code === topicCode);\n    if (!topic) {\n      throw new Error(`指定されたトピックコード「${topicCode}」は存在しません。`);\n    }\n    \n    // 旧形式（dataFile）と新形式（dataFiles）の両方に対応\n    if (topic.dataFiles) {\n      return topic.dataFiles;\n    } else if (topic.dataFile) {\n      return [topic.dataFile];\n    } else {\n      throw new Error(`トピック「${topicCode}」にデータファイルが指定されていません。`);\n    }\n  }\n\n  /**\n   * 単一の問題ファイルを非同期に読み込みます\n   * @param {string} fileName ファイル名\n   * @returns {Promise<Object>} 問題データ\n   */\n  async loadProblemFile(fileName) {\n    // キャッシュに存在する場合はキャッシュから返す\n    if (this.cache.problemFiles[fileName]) {\n      return this.cache.problemFiles[fileName];\n    }\n    \n    try {\n      // ベースURLを考慮したパスを生成\n      const baseUrl = process.env.NODE_ENV === 'production' ? '/cat-teacher-quiz' : '';\n      \n      // キャッシュバスティングのためのタイムスタンプを追加\n      const timestamp = new Date().getTime();\n      const response = await fetch(`${baseUrl}/data/${fileName}?v=${timestamp}`);\n      if (!response.ok) {\n        throw new Error(`問題ファイル「${fileName}」の読み込みに失敗しました: ${response.status}`);\n      }\n      \n      const fileData = await response.json();\n      \n      // データの検証\n      if (!fileData.questions || !Array.isArray(fileData.questions)) {\n        throw new Error(`問題ファイル「${fileName}」の形式が不正です。questions配列が見つかりません。`);\n      }\n      \n      // キャッシュに保存\n      this.cache.problemFiles[fileName] = fileData;\n      \n      // 問題IDによるインデックスを作成\n      fileData.questions.forEach(question => {\n        if (question.id) {\n          this.cache.questionById[question.id] = question;\n        }\n      });\n      \n      return fileData;\n    } catch (error) {\n      console.error(`問題ファイル「${fileName}」の読み込み中にエラーが発生しました:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * 特定のトピックに関連する全ての問題データを読み込みます\n   * @param {string} subjectCode 科目コード\n   * @param {string} topicCode トピックコード\n   * @returns {Promise<Array>} 結合された問題リスト\n   */\n  async loadTopicProblems(subjectCode, topicCode) {\n    const cacheKey = `${subjectCode}_${topicCode}`;\n    \n    // キャッシュに存在する場合はキャッシュから返す\n    if (this.cache.topicProblems[cacheKey]) {\n      console.log(`キャッシュから問題データを取得: ${subjectCode}_${topicCode}、問題数: ${this.cache.topicProblems[cacheKey].questions.length}`);\n      return this.cache.topicProblems[cacheKey];\n    }\n    \n    try {\n      // トピックに関連するデータファイルのリストを取得\n      const dataFiles = await this.getDataFiles(subjectCode, topicCode);\n      console.log(`読み込むファイル一覧: ${JSON.stringify(dataFiles)}`);\n      \n      // 全てのファイルを読み込み、問題データを結合\n      const allQuestions = [];\n      const metadata = { subject: subjectCode, topic: topicCode };\n      \n      for (const fileName of dataFiles) {\n        console.log(`ファイル読み込み開始: ${fileName}`);\n        const fileData = await this.loadProblemFile(fileName);\n        console.log(`ファイル読み込み完了: ${fileName}、問題数: ${fileData.questions.length}`);\n        allQuestions.push(...fileData.questions);\n        \n        // メタデータをマージ（存在する場合）\n        if (fileData.metadata) {\n          Object.assign(metadata, fileData.metadata);\n        }\n      }\n      \n      console.log(`全ファイル読み込み完了、合計問題数: ${allQuestions.length}`);\n      \n      // 結合結果をキャッシュ\n      const result = {\n        subject: subjectCode,\n        topic: topicCode,\n        metadata: metadata,\n        questions: allQuestions\n      };\n      \n      this.cache.topicProblems[cacheKey] = result;\n      return result;\n    } catch (error) {\n      console.error(`トピック「${subjectCode}_${topicCode}」の問題データ読み込み中にエラーが発生しました:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * 特定のトピックの問題データを取得します\n   * @param {string} subjectCode 科目コード\n   * @param {string} topicCode トピックコード\n   * @returns {Promise<Array>} 問題リスト\n   */\n  async getProblems(subjectCode, topicCode) {\n    const problemsData = await this.loadTopicProblems(subjectCode, topicCode);\n    return problemsData.questions;\n  }\n\n  /**\n   * 特定のファイル番号の問題データを取得します\n   * @param {string} subjectCode 科目コード\n   * @param {number} fileNumber ファイル番号（1, 2, 3, ...）\n   * @returns {Promise<Array>} 問題リスト\n   */\n  async getProblemsByFileNumber(subjectCode, fileNumber) {\n    const fileName = `${subjectCode}${fileNumber}.json`;\n    try {\n      const fileData = await this.loadProblemFile(fileName);\n      return fileData.questions;\n    } catch (error) {\n      console.error(`ファイル番号「${fileNumber}」の問題データ取得中にエラーが発生しました:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * 問題IDから問題データを取得します\n   * @param {string} questionId 問題ID\n   * @returns {Promise<Object>} 問題データ\n   */\n  async getQuestionById(questionId) {\n    // キャッシュに存在する場合はキャッシュから返す\n    if (this.cache.questionById[questionId]) {\n      return this.cache.questionById[questionId];\n    }\n    \n    // キャッシュにない場合は、全てのインデックスを読み込み、全ての問題ファイルを検索する必要がある\n    // これは非効率なので、通常はキャッシュから取得できるようにアプリケーションを設計すべき\n    throw new Error(`問題ID「${questionId}」が見つかりません。先に関連するトピックの問題を読み込んでください。`);\n  }\n\n  /**\n   * 特定の科目とトピックのメタデータを取得します\n   * @param {string} subjectCode 科目コード\n   * @param {string} topicCode トピックコード\n   * @returns {Promise<Object>} メタデータ\n   */\n  async getMetadata(subjectCode, topicCode) {\n    const problemsData = await this.loadTopicProblems(subjectCode, topicCode);\n    return {\n      subject: problemsData.subject,\n      topic: problemsData.topic,\n      metadata: problemsData.metadata\n    };\n  }\n\n  // clearCacheメソッドはファイル上部に統合されました\n}\n\nexport default DataManager;\n","import { render } from \"./MistakesView.vue?vue&type=template&id=72c7fca2&scoped=true\"\nimport script from \"./MistakesView.vue?vue&type=script&lang=js\"\nexport * from \"./MistakesView.vue?vue&type=script&lang=js\"\n\nimport \"./MistakesView.vue?vue&type=style&index=0&id=72c7fca2&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-72c7fca2\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '@/views/HomeView.vue';\nimport SubjectSelectView from '@/views/SubjectSelectView.vue';\nimport TopicSelectView from '@/views/TopicSelectView.vue';\nimport QuizView from '@/views/QuizView.vue';\nimport ResultView from '@/views/ResultView.vue';\nimport ComponentPreview from '@/views/ComponentPreview.vue';\nimport MistakesView from '@/views/MistakesView.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView,\n    meta: { transition: 'fade' }\n  },\n  {\n    path: '/mistakes',\n    name: 'mistakes',\n    component: MistakesView,\n    meta: { transition: 'fade' }\n  },\n  {\n    path: '/subjects',\n    name: 'subjects',\n    component: SubjectSelectView,\n    meta: { transition: 'slide-left' }\n  },\n  {\n    path: '/subjects/:subjectCode/topics',\n    name: 'topics',\n    component: TopicSelectView,\n    props: true,\n    meta: { transition: 'slide-left' }\n  },\n  {\n    path: '/subjects/:subjectCode/topics/:topicCode/quiz',\n    name: 'quiz',\n    component: QuizView,\n    props: true,\n    meta: { transition: 'slide-left' }\n  },\n  {\n    path: '/subjects/:subjectCode/topics/:topicCode/result',\n    name: 'result',\n    component: ResultView,\n    props: true,\n    meta: { transition: 'slide-left' }\n  },\n  // 以下は今後実装予定のルート\n  /*\n  {\n    path: '/mistakes',\n    name: 'mistakes',\n    component: () => import('@/views/MistakesView.vue'),\n    meta: { transition: 'slide-left' }\n  },\n  {\n    path: '/settings',\n    name: 'settings',\n    component: () => import('@/views/SettingsView.vue'),\n    meta: { transition: 'slide-left' }\n  },\n    component: () => import('@/views/ResultView.vue'),\n    props: true,\n    meta: { transition: 'slide-left' }\n  },\n  */\n  {\n    path: '/components',\n    name: 'components',\n    component: ComponentPreview,\n    meta: { transition: 'fade' }\n  }\n];\n\nconst router = createRouter({\n  // GitHub Pages環境では '/cat-teacher-quiz/' をベースパスとして使用\n  history: createWebHistory(process.env.NODE_ENV === 'production' ? '/cat-teacher-quiz/' : '/'),\n  routes\n});\n\nexport default router;\n","// store/modules/mistakes.js - 間違えた問題を管理するためのVuexストアモジュール\n\n/**\n * 次の日曜日の18時の日時を計算する関数\n * @returns {Date} 次の日曜日の18時のDate\n */\nconst getNextSundayAt18 = () => {\n  const now = new Date();\n  const resultDate = new Date(now);\n  // 現在の曜日を取得（0: 日曜日, 1: 月曜日, ...)\n  const currentDay = now.getDay();\n  // 次の日曜日までの日数を計算\n  const daysUntilNextSunday = currentDay === 0 ? 7 : 7 - currentDay;\n  \n  // 現在日に日数を加算\n  resultDate.setDate(now.getDate() + daysUntilNextSunday);\n  // 時間を18時に設定\n  resultDate.setHours(18, 0, 0, 0);\n  \n  return resultDate;\n};\n\n/**\n * 指定された日時までの残り時間を「〇日〇時間〇分」の形式で返す関数\n * @param {Date} targetDate 対象の日時\n * @returns {string} 残り時間の文字列\n */\nconst getRemainingTimeString = (targetDate) => {\n  const now = new Date();\n  const diffTime = targetDate - now;\n  \n  if (diffTime <= 0) {\n    return \"クリア可能です\";\n  }\n  \n  // ミリ秒を日・時間・分に変換\n  const days = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  const hours = Math.floor((diffTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const minutes = Math.floor((diffTime % (1000 * 60 * 60)) / (1000 * 60));\n  \n  // 残り時間の文字列を作成\n  let remainingTime = \"\";\n  if (days > 0) {\n    remainingTime += `${days}日 `;\n  }\n  remainingTime += `${hours}時間 ${minutes}分`;\n  \n  return remainingTime;\n};\n\n// 状態（state）の定義\nconst state = {\n  // 間違えた問題のリスト\n  mistakesList: [],\n  // 最終更新日時\n  lastUpdated: null\n};\n\n// ミューテーション（mutations）の定義\nconst mutations = {\n  /**\n   * 間違えた問題を追加または更新する\n   * @param {Object} state ストアの状態\n   * @param {Object} payload 間違えた問題のデータ\n   */\n  addMistake(state, { questionId, subject, topic, question, options, correctAnswer, explanation }) {\n    // 既存の間違い記録を検索\n    const existingIndex = state.mistakesList.findIndex(item => item.questionId === questionId);\n    \n    if (existingIndex >= 0) {\n      // 既存の記録があれば、間違えた回数をインクリメントし、クリア可能日時を更新\n      const mistake = state.mistakesList[existingIndex];\n      state.mistakesList[existingIndex] = {\n        ...mistake,\n        count: mistake.count + 1,\n        lastMistaken: new Date().toISOString(),\n        clearableAt: getNextSundayAt18().toISOString()\n      };\n    } else {\n      // 新規の記録を追加\n      state.mistakesList.push({\n        questionId,\n        subject,\n        topic,\n        question,\n        options,\n        correctAnswer,\n        explanation,\n        count: 1,\n        lastMistaken: new Date().toISOString(),\n        clearableAt: getNextSundayAt18().toISOString(),\n        isClearable: false\n      });\n    }\n    \n    // 最終更新日時を更新\n    state.lastUpdated = new Date().toISOString();\n  },\n  \n  /**\n   * 間違えた問題をクリア（削除）する\n   * @param {Object} state ストアの状態\n   * @param {string} questionId 問題ID\n   */\n  clearMistake(state, questionId) {\n    // 問題IDに一致する記録を検索し、クリア可能な場合のみ削除\n    const mistakeIndex = state.mistakesList.findIndex(item => \n      item.questionId === questionId && item.isClearable);\n    \n    if (mistakeIndex >= 0) {\n      state.mistakesList.splice(mistakeIndex, 1);\n      state.lastUpdated = new Date().toISOString();\n    }\n  },\n  \n  /**\n   * すべての間違えた問題をクリア（クリア可能なもののみ）\n   * @param {Object} state ストアの状態\n   */\n  clearAllMistakes(state) {\n    // クリア可能な問題のみをフィルタリングして残し、それ以外を削除\n    state.mistakesList = state.mistakesList.filter(item => !item.isClearable);\n    state.lastUpdated = new Date().toISOString();\n  },\n  \n  /**\n   * 間違えた問題が正解された場合の処理\n   * @param {Object} state ストアの状態\n   * @param {string} questionId 問題ID\n   */\n  markCorrect(state, questionId) {\n    // 問題IDに一致する記録を検索\n    const mistakeIndex = state.mistakesList.findIndex(item => item.questionId === questionId);\n    \n    if (mistakeIndex >= 0) {\n      // 間違えた回数をデクリメント\n      const mistake = state.mistakesList[mistakeIndex];\n      if (mistake.count > 1) {\n        state.mistakesList[mistakeIndex] = {\n          ...mistake,\n          count: mistake.count - 1,\n          lastMistaken: new Date().toISOString()\n        };\n      } else {\n        // 間違えた回数が1回の場合は記録を削除\n        state.mistakesList.splice(mistakeIndex, 1);\n      }\n      \n      state.lastUpdated = new Date().toISOString();\n    }\n  },\n  \n  /**\n   * クリア可能かどうかの状態を更新\n   * @param {Object} state ストアの状態\n   */\n  updateClearableStatus(state) {\n    const now = new Date();\n    \n    // すべての間違えた問題のクリア可能状態を更新\n    state.mistakesList.forEach((mistake, index) => {\n      const clearableAt = new Date(mistake.clearableAt);\n      state.mistakesList[index].isClearable = now >= clearableAt;\n    });\n  },\n  \n  /**\n   * ストアの状態をローカルストレージから復元\n   * @param {Object} state ストアの状態\n   * @param {Object} payload 復元するデータ\n   */\n  setState(state, { mistakesList, lastUpdated }) {\n    state.mistakesList = mistakesList || [];\n    state.lastUpdated = lastUpdated || null;\n  }\n};\n\n// アクション（actions）の定義\nconst actions = {\n  /**\n   * 間違えた問題を記録する\n   * @param {Object} context ストアのコンテキスト\n   * @param {Object} payload 間違えた問題のデータ\n   */\n  recordMistake({ commit, dispatch }, payload) {\n    commit('addMistake', payload);\n    dispatch('saveToLocalStorage');\n  },\n  \n  /**\n   * 間違えた問題をクリアする\n   * @param {Object} context ストアのコンテキスト\n   * @param {string} questionId 問題ID\n   */\n  clearMistake({ commit, dispatch }, questionId) {\n    commit('clearMistake', questionId);\n    dispatch('saveToLocalStorage');\n  },\n  \n  /**\n   * すべての間違えた問題をクリアする\n   * @param {Object} context ストアのコンテキスト\n   */\n  clearAllMistakes({ commit, dispatch }) {\n    commit('clearAllMistakes');\n    dispatch('saveToLocalStorage');\n  },\n  \n  /**\n   * 間違えた問題が正解された場合の処理\n   * @param {Object} context ストアのコンテキスト\n   * @param {string} questionId 問題ID\n   */\n  markCorrect({ commit, dispatch }, questionId) {\n    commit('markCorrect', questionId);\n    dispatch('saveToLocalStorage');\n  },\n  \n  /**\n   * ローカルストレージからデータを読み込む\n   * @param {Object} context ストアのコンテキスト\n   */\n  loadFromLocalStorage({ commit }) {\n    try {\n      const mistakesData = localStorage.getItem('cat-teacher-mistakes');\n      if (mistakesData) {\n        const parsedData = JSON.parse(mistakesData);\n        commit('setState', parsedData);\n        // クリア可能状態を即時更新\n        commit('updateClearableStatus');\n      }\n    } catch (error) {\n      console.error('間違えた問題データの読み込みに失敗しました', error);\n    }\n  },\n  \n  /**\n   * ローカルストレージにデータを保存する\n   * @param {Object} context ストアのコンテキスト\n   */\n  saveToLocalStorage({ state }) {\n    try {\n      const mistakesData = {\n        mistakesList: state.mistakesList,\n        lastUpdated: state.lastUpdated\n      };\n      localStorage.setItem('cat-teacher-mistakes', JSON.stringify(mistakesData));\n    } catch (error) {\n      console.error('間違えた問題データの保存に失敗しました', error);\n    }\n  }\n};\n\n// ゲッター（getters）の定義\nconst getters = {\n  /**\n   * 間違えた問題の総数を取得\n   * @param {Object} state ストアの状態\n   * @returns {number} 間違えた問題の総数\n   */\n  totalMistakes: (state) => {\n    return state.mistakesList.length;\n  },\n  \n  /**\n   * 科目ごとの間違えた問題数を取得\n   * @param {Object} state ストアの状態\n   * @returns {Object} 科目コードをキー、問題数を値とするオブジェクト\n   */\n  mistakesBySubject: (state) => {\n    const result = {};\n    state.mistakesList.forEach(mistake => {\n      if (!result[mistake.subject]) {\n        result[mistake.subject] = 0;\n      }\n      result[mistake.subject]++;\n    });\n    return result;\n  },\n  \n  /**\n   * よく間違える問題（2回以上間違えた問題）の数を科目ごとに取得\n   * @param {Object} state ストアの状態\n   * @returns {Object} 科目コードをキー、よく間違える問題の数を値とするオブジェクト\n   */\n  frequentMistakesBySubject: (state) => {\n    const result = {};\n    state.mistakesList.forEach(mistake => {\n      if (mistake.count >= 2) {\n        if (!result[mistake.subject]) {\n          result[mistake.subject] = 0;\n        }\n        result[mistake.subject]++;\n      }\n    });\n    return result;\n  },\n  \n  /**\n   * 科目ごとの間違えた問題リストを取得\n   * @param {Object} state ストアの状態\n   * @returns {Function} 科目コードを引数に取り、その科目の間違えた問題リストを返す関数\n   */\n  mistakesListBySubject: (state) => (subject) => {\n    return state.mistakesList\n      .filter(mistake => mistake.subject === subject)\n      .sort((a, b) => b.count - a.count); // 間違えた回数の多い順にソート\n  },\n  \n  /**\n   * 科目とトピックごとの間違えた問題リストを取得\n   * @param {Object} state ストアの状態\n   * @returns {Function} 科目コードとトピックコードを引数に取り、その条件に一致する間違えた問題リストを返す関数\n   */\n  mistakesListBySubjectAndTopic: (state) => (subject, topic) => {\n    return state.mistakesList\n      .filter(mistake => mistake.subject === subject && mistake.topic === topic)\n      .sort((a, b) => b.count - a.count); // 間違えた回数の多い順にソート\n  },\n  \n  /**\n   * よく間違える問題（2回以上間違えた問題）のリストを取得\n   * @param {Object} state ストアの状態\n   * @returns {Array} よく間違える問題のリスト\n   */\n  frequentMistakesList: (state) => {\n    return state.mistakesList\n      .filter(mistake => mistake.count >= 2)\n      .sort((a, b) => b.count - a.count); // 間違えた回数の多い順にソート\n  },\n  \n  /**\n   * クリア不可メッセージの取得（次の日曜18時対応版）\n   * @returns {Function} 間違えた問題を引数に取り、クリア可能までの残り時間メッセージを返す関数\n   */\n  getLockedMessage: () => (mistake) => {\n    if (mistake.isClearable) {\n      return \"クリア可能です\";\n    }\n    \n    const clearableAt = new Date(mistake.clearableAt);\n    return `次の日曜18時(${clearableAt.toLocaleDateString()})までクリアできません。残り時間: ${getRemainingTimeString(clearableAt)}`;\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};\n","import { createStore } from 'vuex';\nimport DataManager from '@/services/DataManager';\nimport mistakes from './modules/mistakes';\n\n// DataManagerのインスタンスを作成\nconst dataManager = new DataManager();\n\nexport default createStore({\n  modules: {\n    mistakes\n  },\n  state: {\n    subjects: [],\n    currentSubject: null,\n    currentTopic: null,\n    problems: [],\n    metadata: null,\n    loading: false,\n    error: null,\n    // ユーザー関連の状態\n    userData: {\n      currentRank: 'ビギナー',\n      score: 0,\n      completedTopics: {},\n      lastPlayed: null\n    }\n  },\n  getters: {\n    getSubjects: (state) => state.subjects,\n    getCurrentSubject: (state) => state.currentSubject,\n    getCurrentTopic: (state) => state.currentTopic,\n    getProblems: (state) => state.problems,\n    getMetadata: (state) => state.metadata,\n    isLoading: (state) => state.loading,\n    getError: (state) => state.error,\n    getUserData: (state) => state.userData\n  },\n  mutations: {\n    SET_SUBJECTS(state, subjects) {\n      state.subjects = subjects;\n    },\n    SET_CURRENT_SUBJECT(state, subject) {\n      state.currentSubject = subject;\n    },\n    SET_CURRENT_TOPIC(state, topic) {\n      state.currentTopic = topic;\n    },\n    SET_PROBLEMS(state, problems) {\n      state.problems = problems;\n    },\n    SET_METADATA(state, metadata) {\n      state.metadata = metadata;\n    },\n    SET_LOADING(state, loading) {\n      state.loading = loading;\n    },\n    SET_ERROR(state, error) {\n      state.error = error;\n    },\n    SET_USER_DATA(state, userData) {\n      state.userData = userData;\n    },\n    // 特定のトピックの完了状態を更新\n    UPDATE_TOPIC_COMPLETION(state, { subjectCode, topicCode, completed, score }) {\n      if (!state.userData.completedTopics[subjectCode]) {\n        state.userData.completedTopics[subjectCode] = {};\n      }\n      \n      state.userData.completedTopics[subjectCode][topicCode] = {\n        completed,\n        score,\n        completedAt: new Date().toISOString()\n      };\n      \n      // 最終プレイ日時を更新\n      state.userData.lastPlayed = new Date().toISOString();\n    },\n    // ユーザーのランクを更新\n    UPDATE_USER_RANK(state, rank) {\n      state.userData.currentRank = rank;\n    },\n    // ユーザーの総スコアを更新\n    UPDATE_USER_SCORE(state, score) {\n      state.userData.score = score;\n    }\n  },\n  actions: {\n    // 科目データを読み込む\n    async loadSubjectsData({ commit }, options = {}) {\n      commit('SET_LOADING', true);\n      commit('SET_ERROR', null);\n      \n      try {\n        // 強制再読み込みオプションが指定されている場合はキャッシュをクリア\n        if (options.forceRefresh) {\n          // DataManagerのキャッシュをクリア\n          dataManager.clearCache();\n          console.log('データマネージャーのキャッシュをクリアしました');\n        }\n        \n        const indexData = await dataManager.loadIndex();\n        commit('SET_SUBJECTS', indexData.subjects);\n        console.log('科目データを読み込みました:', indexData.subjects);\n      } catch (error) {\n        commit('SET_ERROR', error.message);\n        console.error('科目データの読み込み中にエラーが発生しました:', error);\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    \n    // 特定の科目とトピックの問題データを読み込む\n    async loadProblems({ commit, dispatch }, { subjectCode, topicCode, forceRefresh = false }) {\n      commit('SET_LOADING', true);\n      commit('SET_ERROR', null);\n      \n      try {\n        // キャッシュが古い可能性があるため、強制的に科目データを再読み込み\n        if (forceRefresh) {\n          // キャッシュを弾く\n          dataManager.clearCache();\n          await dispatch('loadSubjectsData', { forceRefresh: true });\n          console.log('科目データを強制再読み込みしました');\n        }\n        \n        // 科目リストを取得\n        const subjects = await dataManager.getSubjects();\n        console.log('利用可能な科目:', subjects.map(s => s.code));\n        \n        const subject = subjects.find(s => s.code === subjectCode);\n        if (!subject) {\n          throw new Error(`指定された科目コード「${subjectCode}」は存在しません。`);\n        }\n        \n        // 科目の全トピックを詳細表示\n        console.log(`科目 \"${subject.name}\" のトピック一覧:`, subject.topics.map(t => ({ \n          code: t.code, \n          name: t.name,\n          icon: t.icon,\n          dataFiles: t.dataFiles\n        })));\n        \n        // トピックリストを取得\n        const topics = await dataManager.getTopics(subjectCode);\n        const topic = topics.find(t => t.code === topicCode);\n        \n        if (!topic) {\n          throw new Error(`指定された科目「${subjectCode}」にトピック「${topicCode}」は存在しません。`);\n        }\n        \n        console.log(`選択されたトピック: ${topic.name} (${topicCode}), データファイル:`, topic.dataFiles);\n        \n        commit('SET_CURRENT_SUBJECT', subject);\n        commit('SET_CURRENT_TOPIC', topic);\n        \n        // 問題データを読み込む\n        const questions = await dataManager.getProblems(subjectCode, topicCode);\n        console.log(`トピック \"${topic.name}\" のロードされた問題数:`, questions.length);\n        \n        // questions配列を取得してストアにセット\n        if (questions && Array.isArray(questions)) {\n          // 問題データが空でないことを確認\n          if (questions.length > 0) {\n            commit('SET_PROBLEMS', questions);\n            console.log(`問題データをセットしました: ${questions.length}個の問題`);\n          } else {\n            console.error('問題データが空です');\n            commit('SET_PROBLEMS', []);\n          }\n        } else {\n          console.error('問題データの形式が不正です:', questions);\n          commit('SET_PROBLEMS', []);\n        }\n        \n        // メタデータを取得してストアにセット\n        const metadata = await dataManager.getMetadata(subjectCode, topicCode);\n        if (metadata) {\n          commit('SET_METADATA', metadata);\n          console.log('メタデータをセットしました:', metadata);\n        }\n      } catch (error) {\n        commit('SET_ERROR', error.message);\n        console.error('問題データの読み込み中にエラーが発生しました:', error);\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    \n    // ユーザーデータをローカルストレージから読み込む\n    loadUserData({ commit }) {\n      try {\n        const userData = localStorage.getItem('catTeacherUserData');\n        if (userData) {\n          commit('SET_USER_DATA', JSON.parse(userData));\n        }\n      } catch (error) {\n        console.error('ユーザーデータの読み込み中にエラーが発生しました:', error);\n      }\n    },\n    \n    // ユーザーデータをローカルストレージに保存する\n    saveUserData({ state }) {\n      try {\n        localStorage.setItem('catTeacherUserData', JSON.stringify(state.userData));\n      } catch (error) {\n        console.error('ユーザーデータの保存中にエラーが発生しました:', error);\n      }\n    },\n    \n    // トピックの完了状態を更新する\n    updateTopicCompletion({ commit, dispatch }, { subjectCode, topicCode, completed, score }) {\n      commit('UPDATE_TOPIC_COMPLETION', { subjectCode, topicCode, completed, score });\n      dispatch('saveUserData');\n    },\n    \n    // ユーザーのランクを更新する\n    updateUserRank({ commit, dispatch }, rank) {\n      commit('UPDATE_USER_RANK', rank);\n      dispatch('saveUserData');\n    },\n    \n    // ユーザーの総スコアを更新する\n    updateUserScore({ commit, dispatch }, score) {\n      commit('UPDATE_USER_SCORE', score);\n      dispatch('saveUserData');\n    }\n  }\n});\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\n\n// グローバルスタイルシートのインポート\nimport './styles/main.scss'\n\nconst app = createApp(App)\n\n// Vue Router と Vuex を使用\napp.use(router)\napp.use(store)\n\n// アプリケーションをマウント\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcat_teacher_quiz\"] = self[\"webpackChunkcat_teacher_quiz\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9434); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","_hoisted_5","_component_router_view","Component","route","_Transition","name","meta","transition","mode","_createBlock","_resolveDynamicComponent","setup","store","useStore","onMounted","keysToRemove","forEach","key","localStorage","removeItem","console","log","Object","keys","dispatch","commit","forceRefresh","then","catch","error","__exports__","render","title","_component_GrTitle","tag","size","color","src","$setup","topNekoImagePath","alt","loading","_hoisted_6","_toDisplayString","_hoisted_7","_hoisted_8","_component_GrButton","variant","onClick","navigateToSubjects","_hoisted_9","navigateToMistakes","hasMistakes","_hoisted_10","_Fragment","_renderList","subjectsWithMistakes","subject","_normalizeClass","frequentMistakesBySubject","_hoisted_11","_hoisted_12","mistakesBySubject","_hoisted_13","_createCommentVNode","userData","lastPlayed","_hoisted_14","formatDate","$props","$options","sizeClass","colorClass","_renderSlot","_ctx","$slots","undefined","props","type","String","validator","value","includes","computed","this","variantClass","fullWidth","disabled","$event","$emit","Boolean","components","GrTitle","GrButton","router","useRouter","ref","currentRank","score","subjects","getters","getSubjects","isLoading","getError","isProd","process","basePathForAssets","filter","length","async","Date","toISOString","dateString","date","toLocaleDateString","year","month","day","hour","minute","push","_component_GrCard","code","border","elevation","navigateToTopics","style","_normalizeStyle","backgroundColor","icon","getSubjectIconPath","charAt","topics","navigateToHome","elevationClass","borderClass","assetBaseUrl","GrCard","subjectCode","params","iconPath","currentSubject","_component_GrBubble","direction","topic","navigateToQuiz","_component_GrHighlight","inline","questionCount","difficulty","_hoisted_15","targetAge","_hoisted_16","GrBubble","GrHighlight","useRoute","find","topicCode","currentTopic","currentQuestionIndex","questions","width","progressPercentage","currentQuestion","question","options","choice","index","getChoiceVariant","answerSubmitted","selectAnswer","feedbackCardElevation","feedbackCardBorder","isCorrect","_hoisted_17","explanation","_hoisted_18","nextQuestion","isLastQuestion","_hoisted_19","_component_character_display","character","getCharacterType","state","getCharacterState","message","characterMessage","bubbleColor","imageUrl","characterName","characterColor","names","neko_sensei","usagi_coach","fukurou_professor","wanwan_doctor","colors","stateColors","normal","happy","teasing","CharacterDisplay","selectedAnswer","characterType","characterState","characterBubbleColor","quizMode","query","retryQuestionId","questionId","retryQuestionIds","isFrequentMistakesMode","frequentOnly","questionIds","JSON","parse","問題数","よく間違える問題モード","err","initialQuizResults","correctCount","totalQuestions","incorrectIds","setItem","stringify","科目コード","トピックコード","モード","problemsData","getProblems","Error","targetQuestion","q","targetQuestions","shuffleArray","読み込み成功数","対象問題数","array","i","j","Math","floor","random","correctAnswer","quizResults","getItem","incorrectId","問題番号","正解","正答数","不正解問題数","getRandomCorrectMessage","getRandomIncorrectMessage","incorrectCount","総問題数","不正解数","正答率","round","間違えた問題数","間違えた問題IDs","messages","percentageCorrect","hasFrequentMistakes","_component_CharacterDisplay","emotion","getFeedbackEmotion","speechText","getFeedbackMessage","tryAgain","goToHome","storedResults","recordMistakes","problems","metadata","getMetadata","problem","p","choices","frequentMistakes","percentage","_hoisted_20","_hoisted_21","totalMistakes","image","availableSubjects","active","selectedSubject","selectSubject","filteredMistakes","retryAllMistakes","hasClearableMistakes","showClearAllConfirmation","mistake","count","retryQuestion","confirmClearMistake","isExplanationLoading","getExplanation","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","join","_hoisted_22","_hoisted_23","_hoisted_28","showClearConfirmation","_hoisted_29","_hoisted_30","_hoisted_31","clearMistake","_hoisted_32","_hoisted_33","_hoisted_34","clearAllMistakes","DataManager","constructor","cache","problemFiles","topicProblems","questionById","version","checkCacheVersion","savedVersion","clearCache","clearAll","timestamp","getTime","loadIndex","baseUrl","response","fetch","ok","status","indexData","json","getTopics","s","getDataFiles","t","dataFiles","dataFile","loadProblemFile","fileName","fileData","Array","isArray","loadTopicProblems","cacheKey","allQuestions","assign","result","getProblemsByFileNumber","fileNumber","getQuestionById","mistakeToDelete","loadSubjects","some","mistakes","問題ID","問題文","正解選択肢","解説","データキー","isClearable","getLockedMessage","quizParams","targetMistakes","warn","map","uniqueTopicCodes","Set","対象トピック数","よく間違えるモード","科目","トピック","fetchExplanation","dataManager","explanations","explanationLoading","mistakeId","e","routes","path","component","HomeView","MistakesView","SubjectSelectView","TopicSelectView","QuizView","ResultView","ComponentPreview","createRouter","history","createWebHistory","getNextSundayAt18","now","resultDate","currentDay","getDay","daysUntilNextSunday","setDate","getDate","setHours","getRemainingTimeString","targetDate","diffTime","days","hours","minutes","remainingTime","mistakesList","lastUpdated","mutations","addMistake","existingIndex","findIndex","item","lastMistaken","clearableAt","mistakeIndex","splice","markCorrect","updateClearableStatus","setState","actions","recordMistake","payload","loadFromLocalStorage","mistakesData","parsedData","saveToLocalStorage","mistakesListBySubject","sort","a","b","mistakesListBySubjectAndTopic","frequentMistakesList","namespaced","createStore","modules","completedTopics","getCurrentSubject","getCurrentTopic","getUserData","SET_SUBJECTS","SET_CURRENT_SUBJECT","SET_CURRENT_TOPIC","SET_PROBLEMS","SET_METADATA","SET_LOADING","SET_ERROR","SET_USER_DATA","UPDATE_TOPIC_COMPLETION","completed","completedAt","UPDATE_USER_RANK","rank","UPDATE_USER_SCORE","loadSubjectsData","loadProblems","loadUserData","saveUserData","updateTopicCompletion","updateUserRank","updateUserScore","app","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}